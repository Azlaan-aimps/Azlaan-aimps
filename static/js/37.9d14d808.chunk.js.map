{"version":3,"sources":["services/service.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","views/users/Payment.js","views/payments/Recieved_Amount_List.js"],"names":["TAABEDAR_SERVICE","_arrayLikeToArray","arr","len","length","i","arr2","Array","_slicedToArray","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","err","o","minLen","n","prototype","toString","call","slice","constructor","name","from","test","TypeError","Payment","SLNO","Order_No","Order_Date","Rider","Amount_Recieved","Order_Amount","Merchant","Payment_Mode","Ref_No","Total_Amount","Notification","Amount_Recieved_Status","Amount_Paid_Status","Customer","Change_Amount","Delivery_Charge","Discount","DeliveryBoy","Coupon_Code","Date","Order_Type","Sub_order","fields","key","table","placeholder","label","items","values","Recieved_Amount_List","useState","ResponseData","setResponseData","PaymentByRider","setPaymentByRider","PaymentByUser","setPaymentByUser","TotalOrder","setTotalOrder","FinalAmount","setFinalAmount","fromDate","setfromDate","toDate","settoDate","Recieved_Amounts","React","useCallback","axios","method","url","headers","then","response","data","catch","error","console","log","Recieved_Amounts_Summary","useEffect","id","col","md","htmlFor","type","onChange","event","target","size","color","style","width","onClick","hover","striped","bordered","sorter","tableFilter","itemsPerPage","pagination","itemsPerPageSelect","scopedSlots","item","OrderNumber","Pdate","Payment_By","User","Pname","fontSize","fontWeight","background","padding"],"mappings":"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","file":"static/js/37.9d14d808.chunk.js","sourcesContent":["const TAABEDAR_SERVICE =\r\n  'http://192.168.1.3:8086/Tabedar_Dashboard/resourses/projectservice';\r\n\r\nexport default TAABEDAR_SERVICE;\r\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","const Payment = [\r\n\r\n    {\r\n        SLNO: 1,\r\n        Order_No: '20351',\r\n        Order_Date:'15/4/2021',\r\n        Rider:'XYZ person',\r\n        Amount_Recieved:'2000',\r\n        Order_Amount:'2000',\r\n        Merchant:'Big Bazar',\r\n        Payment_Mode:'Jazz Cash',\r\n        Ref_No:'IFSC123450',\r\n        Total_Amount:'5000',\r\n        Notification:'XYz Rider paid you 5000rs.',\r\n        Amount_Recieved_Status:'Yes',\r\n        Amount_Paid_Status:'Paid',\r\n        Customer:\"uzma\",\r\n        Change_Amount:\"50rs/-\",\r\n        Delivery_Charge:\"200rs/-\",\r\n        Discount:\"30%\",\r\n        DeliveryBoy:\"RDET\",\r\n        Coupon_Code:\"12345\",\r\n        Date:\"15/5/2020\",\r\n        Order_Type:\"Sinlge\",\r\n        Sub_order:\"1\",\r\n        Order_Amount:\"5820\",\r\n        Final_Amount:\"5894\",\r\n        Total_Km:\"65\",\r\n        Status:\"Delivered\",\r\n        User:\"Arslan\",\r\n        Final_Amount:3500,\r\n        Total_Orders:15,\r\n        Payment_By:'Rider',\r\n        Amount_Paid:5000,\r\n        Payment_Date:\"15/5/2020\",\r\n    },\r\n    {\r\n        SLNO: 2,\r\n        Order_No: '20352',\r\n        Order_Date:'16/4/2021',\r\n        Rider:'XYZ person',\r\n        Amount_Recieved:'1000',\r\n        Order_Amount:'1000',\r\n        Merchant:'Loyal World',\r\n        Payment_Mode:'Card',\r\n        Ref_No:'IFSC123458',\r\n        Total_Amount:'5000',\r\n        Notification:'XYz Rider paid you 1000rs.',\r\n        Amount_Recieved_Status:'No',\r\n       Amount_Paid_Status:'Not Paid',\r\n       Customer:\"uzma\",\r\n       Change_Amount:\"50rs/-\",\r\n       Delivery_Charge:\"200rs/-\",\r\n       Discount:\"30%\", DeliveryBoy:\"RDET\",\r\n       Coupon_Code:\"12345\",\r\n       Date:\"15/5/2020\",\r\n       Order_Type:\"Multiple\",\r\n       Sub_order:\"4\",\r\n        Order_Amount:\"5820\",\r\n        Final_Amount:\"5894\",\r\n        Total_Km:\"65\",\r\n        Status:\"Delivered\",\r\n        User:\"Shabaz\",\r\n        Final_Amount:500,\r\n        Total_Orders:9,\r\n        Payment_By:'User',\r\n        Amount_Paid:5500,\r\n        Payment_Date:\"15/5/2020\",\r\n\r\n    },\r\n    {\r\n        SLNO: 3,\r\n        Order_No: '20351',\r\n        Order_Date:'17/4/2021',\r\n        Rider:'XYZ person',\r\n        Amount_Recieved:'5000',\r\n        Order_Amount:'5000',\r\n        Merchant:'Big Bazar',\r\n        Payment_Mode:'Jazz Cash',\r\n        Ref_No:'IFSC123453',\r\n        Total_Amount:'5000',\r\n        Notification:'XYz Rider paid you 2000rs.',\r\n        Amount_Recieved_Status:'Yes',\r\n       Amount_Paid_Status:'Not Paid',\r\n       Customer:\"uzma\",\r\n       Change_Amount:\"50rs/-\",\r\n       Delivery_Charge:\"200rs/-\",\r\n        Discount:\"30%\", DeliveryBoy:\"RDET\",\r\n        Coupon_Code:\"12345\",\r\n       Date:\"15/5/2020\",\r\n       Order_Type:\"Multiple\",\r\n       Sub_order:\"4\",\r\n        Order_Amount:\"5820\",\r\n        Final_Amount:\"5894\",\r\n        Total_Km:\"65\",\r\n        Status:\"Delivered\",\r\n        User:\"Uzma\",\r\n        Final_Amount:3500,\r\n        Total_Orders:10,\r\n        Payment_By:'Rider',\r\n        Amount_Paid:8000,\r\n        Payment_Date:\"15/5/2020\",\r\n    },\r\n]\r\n\r\n\r\nexport default Payment","import React, { Component, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CDataTable,\r\n  CRow,\r\n  CCardHeader,\r\n  CInput,\r\n  CLabel,\r\n  CButton,\r\n} from \"@coreui/react\";\r\nimport \"../../style.css\";\r\nimport usersData from \"../users/Payment\";\r\nimport TAABEDAR_SERVICE from \"src/services/service\";\r\n\r\nconst fields = [\r\n  { key: \"SLNO\" },\r\n  { key: \"Order_No\" },\r\n  { key: \"Date\" },\r\n  { key: \"Payment_By\" },\r\n  { key: \"User\" },\r\n  { key: \"Amount_Recieved\" },\r\n  { key: \"Payment_Mode\" },\r\n  { key: \"Ref_No\" },\r\n];\r\n\r\nconst table = { placeholder: \"Search here...\", label: \"Search:  \" };\r\nconst items = { label: \"Rows\", values: [5, 10, 25, 50, 75, 100] };\r\n\r\nconst Recieved_Amount_List = () => {\r\n  const [ResponseData, setResponseData] = useState(\"\");\r\n\r\n  const [PaymentByRider, setPaymentByRider] = useState(\"\");\r\n  const [PaymentByUser, setPaymentByUser] = useState(\"\");\r\n  const [TotalOrder, setTotalOrder] = useState(\"\");\r\n  const [FinalAmount, setFinalAmount] = useState(\"\");\r\n\r\n  const [fromDate, setfromDate] = useState(\"\");\r\n  const [toDate, settoDate] = useState(\"\");\r\n\r\n  const Recieved_Amounts = React.useCallback(() => {\r\n    axios({\r\n      method: \"GET\",\r\n      url: TAABEDAR_SERVICE+\"/Recieved_Amounts\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        setResponseData(response.data);\r\n        setTotalOrder(response.data.length);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  const Recieved_Amounts_Summary = React.useCallback(() => {\r\n    axios({\r\n      method: \"GET\",\r\n      url: TAABEDAR_SERVICE+\"/Recieved_Amounts_Summary\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        setPaymentByRider(response.data[0].PaymentByRider);\r\n        setPaymentByUser(response.data[0].PaymentByUser);\r\n        setFinalAmount(response.data[0].FinalAmount);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  const FromChange = (event) => {\r\n    setfromDate(event.target.value);\r\n  };\r\n  const ToChange = (event) => {\r\n    settoDate(event.target.value);\r\n  };\r\n\r\n  const FilterDates = () => {\r\n    axios({\r\n      method: \"GET\",\r\n      url:\r\n        TAABEDAR_SERVICE+\"/Recieved_Amounts_Filter/\" +\r\n        fromDate +\r\n        \"/\" +\r\n        toDate +\r\n        \"\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        setResponseData(response.data);\r\n        setTotalOrder(response.data.length);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    axios({\r\n      method: \"GET\",\r\n      url:\r\n        TAABEDAR_SERVICE+\"/Recieved_Amounts_Summary_Filter/\" +\r\n        fromDate +\r\n        \"/\" +\r\n        toDate +\r\n        \"\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        setPaymentByRider(response.data[0].PaymentByRider);\r\n        setPaymentByUser(response.data[0].PaymentByUser);\r\n        setFinalAmount(response.data[0].FinalAmount);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const FilterReset = () => {\r\n    setfromDate(\"\");\r\n    settoDate(\"\");\r\n    Recieved_Amounts();\r\n    Recieved_Amounts_Summary();\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    Recieved_Amounts();\r\n    Recieved_Amounts_Summary();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1 id=\"ccmaster\">Recieved Payment</h1>\r\n      <CRow>\r\n        <CCol col=\"10\">\r\n          <CCard>\r\n            <CCardBody>\r\n              <CRow>\r\n                <CCol>\r\n                  <CCard>\r\n                    <CCardHeader>\r\n                      <CRow>\r\n                        <CCol md=\"2\">\r\n                          <CLabel htmlFor=\"nf-email\">From Date</CLabel>\r\n                          <CInput\r\n                            type=\"date\"\r\n                            onChange={FromChange}\r\n                            value={fromDate}\r\n                          ></CInput>\r\n                        </CCol>\r\n                        <CCol md=\"2\">\r\n                          <CLabel htmlFor=\"nf-email\">To Date</CLabel>\r\n                          <CInput\r\n                            type=\"date\"\r\n                            onChange={ToChange}\r\n                            value={toDate}\r\n                          ></CInput>\r\n                        </CCol>\r\n                        <CCol md=\"2\">\r\n                          <CButton\r\n                            size=\"sm\"\r\n                            color=\"info\"\r\n                            style={{ \"margin-top\": \"28px\", width: \"100%\" }}\r\n                            onClick={FilterDates}\r\n                          >\r\n                            Filter\r\n                          </CButton>\r\n                        </CCol>\r\n                        <CCol md=\"2\">\r\n                          <CButton\r\n                            size=\"sm\"\r\n                            color=\"danger\"\r\n                            style={{ \"margin-top\": \"28px\", width: \"100%\" }}\r\n                            onClick={FilterReset}\r\n                          >\r\n                            Reset\r\n                          </CButton>\r\n                        </CCol>\r\n                      </CRow>\r\n                    </CCardHeader>\r\n                    <CCardBody>\r\n                      <CDataTable\r\n                        items={ResponseData}\r\n                        fields={fields}\r\n                        hover\r\n                        striped\r\n                        bordered\r\n                        sorter\r\n                        tableFilter={table}\r\n                        itemsPerPage={4}\r\n                        pagination\r\n                        size=\"sm\"\r\n                        itemsPerPageSelect={items}\r\n                        scopedSlots={{\r\n                          SLNO: (item) => <td>{item.id}</td>,\r\n                          Order_No: (item) => <td>{item.OrderNumber}</td>,\r\n                          Date: (item) => <td>{item.Pdate}</td>,\r\n                          Payment_By: (item) => <td>{item.Payment_By}</td>,\r\n                          User: (item) => <td>{item.Pname}</td>,\r\n                          Amount_Recieved: (item) => (\r\n                            <td>{item.Amount_Recieved}</td>\r\n                          ),\r\n                          Payment_Mode: (item) => <td>{item.Payment_Mode}</td>,\r\n                          Ref_No: (item) => <td>{item.Ref_No}</td>,\r\n                        }}\r\n                      />\r\n                    </CCardBody>\r\n                  </CCard>\r\n                </CCol>\r\n              </CRow>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow>\r\n        <CCol md=\"12\">\r\n          <CCard>\r\n            <CCardBody>\r\n              <CRow>\r\n                <CCol>\r\n                  <CCard>\r\n                    <CCardHeader>Summary</CCardHeader>\r\n                    <CCardBody>\r\n                      <p style={{ fontSize: \"12px\" }}>\r\n                        <span>Total Orders: </span> {TotalOrder}\r\n                      </p>\r\n                      <p style={{ fontSize: \"12px\" }}>\r\n                        <span>Payment By Riders: </span> {PaymentByRider}\r\n                      </p>\r\n                      <p style={{ fontSize: \"12px\" }}>\r\n                        <span>Payments By Users: </span> {PaymentByUser}\r\n                      </p>\r\n                      <p style={{ fontSize: \"12px\" }}>\r\n                        <span>Final Amount Recieved: </span>\r\n                        <span\r\n                          style={{\r\n                            color: \"green\",\r\n                            fontWeight: \"700\",\r\n                            fontSize: \"15px\",\r\n                            background: \"#f4f4f4\",\r\n                            padding: \"5px\",\r\n                          }}\r\n                        >\r\n                          {\" \"}\r\n                          {FinalAmount}\r\n                        </span>{\" \"}\r\n                      </p>\r\n                      {/* <p  style={{fontSize:'12px'}}><span>Mode Of Payment  : </span>COD</p> */}\r\n                    </CCardBody>\r\n                  </CCard>\r\n                </CCol>\r\n              </CRow>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Recieved_Amount_List;\r\n"],"sourceRoot":""}