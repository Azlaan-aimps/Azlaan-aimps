{"version":3,"sources":["services/service.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","views/masters/DeliveryPrice.js"],"names":["TAABEDAR_SERVICE","_arrayLikeToArray","arr","len","length","i","arr2","Array","_slicedToArray","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","err","o","minLen","n","prototype","toString","call","slice","constructor","name","from","test","TypeError","table","placeholder","label","items","values","fields","key","DeliveryPrice","useState","getPost","setGetPost","countryId","setCountryId","province","setProviance","provinceId","setProvianceId","city","setCity","cityId","setCityId","Area","setArea","AreaId","setAreaId","price","setPrice","deliveryData","setDeliveryData","addBtn","setAddBtn","pkid","setPkid","useEffect","axios","get","then","res","data","map","item","Country","catch","console","log","callProvince","useCallback","id","response","Province","callCity","City","callArea","dataObj","Price","GetAllPrice","callAdd","alert","post","GetCountryForUpdate","stateId","areaId","GetStateByCountry","GetCityByStateAndCountry","GetAreaByCityStateAndCountry","AddBtn","type","size","onClick","UpdateBtn","updateLogic","md","htmlFor","custom","onChange","event","target","e","col","striped","itemsPerPage","pagination","sorter","tableFilter","itemsPerPageSelect","scopedSlots","Action","editRow","maxPrice","status","deleteRow","Price_per_KM"],"mappings":"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","file":"static/js/57.9aac1785.chunk.js","sourcesContent":["const TAABEDAR_SERVICE =\r\n  'http://192.168.1.3:8086/Tabedar_Dashboard/resourses/projectservice';\r\n\r\nexport default TAABEDAR_SERVICE;\r\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CDataTable,\r\n  CRow,\r\n  CButton,\r\n  CForm,\r\n  CFormGroup,\r\n  CSelect,\r\n  CInput,\r\n  CLabel,\r\n} from \"@coreui/react\";\r\nimport \"../../style.css\";\r\nimport TAABEDAR_SERVICE from \"src/services/service\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteSharpIcon from \"@material-ui/icons/DeleteSharp\";\r\nimport axios from \"axios\";\r\nimport { Formik, useFormik } from \"formik\";\r\n\r\nconst table = { placeholder: \"Search here...\", label: \"Search:  \" };\r\nconst items = { label: \"Rows:\", values: [5, 10, 25, 50, 75, 100] };\r\nconst fields = [\r\n  { key: \"Action\" },\r\n  { key: \"Country\" },\r\n  { key: \"Province\" },\r\n  { key: \"City\" },\r\n  { key: \"Area\" },\r\n  { key: \"Price_per_KM\" },\r\n];\r\n\r\nconst DeliveryPrice = () => {\r\n  const [getPost, setGetPost] = useState();\r\n  const [countryId, setCountryId] = useState();\r\n  const [province, setProviance] = useState();\r\n  const [provinceId, setProvianceId] = useState();\r\n  const [city, setCity] = useState();\r\n  const [cityId, setCityId] = useState();\r\n  const [Area, setArea] = useState();\r\n  const [AreaId, setAreaId] = useState();\r\n  const [price, setPrice] = useState();\r\n  const [deliveryData, setDeliveryData] = useState();\r\n  const [addBtn, setAddBtn] = useState(true);\r\n  const [pkid, setPkid] = useState(null);\r\n  // const [updateBtn, setUpdateBtn] = useState (false);\r\n\r\n  const selectionHandler = (event) => {\r\n    setCountryId(event.target.value);\r\n    callProvince(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(TAABEDAR_SERVICE + \"/GetCountry\")\r\n      .then((res) => {\r\n        setGetPost(\r\n          res.data.map((item) => {\r\n            return <option value={item.pkid}>{item.Country}</option>;\r\n          })\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  const callProvince = useCallback((id) => {\r\n    axios\r\n      .get(TAABEDAR_SERVICE + \"/GetStateByCountry/\" + id + \"\")\r\n      .then((response) => {\r\n        setProviance(\r\n          response.data.map((item) => {\r\n            return <option value={item.pkid}>{item.Province}</option>;\r\n          })\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  });\r\n\r\n  const callCity = useCallback((id) => {\r\n    axios\r\n      .get(\r\n        TAABEDAR_SERVICE +\r\n          \"/GetCityByStateAndCountry/\" +\r\n          countryId +\r\n          \"/\" +\r\n          id +\r\n          \"\"\r\n      )\r\n      .then((response) => {\r\n        setCity(\r\n          response.data.map((item) => {\r\n            return <option value={item.pkid}>{item.City}</option>;\r\n          })\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  });\r\n\r\n  const callArea = useCallback((id) => {\r\n    axios\r\n      .get(\r\n        TAABEDAR_SERVICE +\r\n          \"/GetAreaByCityStateAnndCountry/\" +\r\n          countryId +\r\n          \"/\" +\r\n          provinceId +\r\n          \"/\" +\r\n          id +\r\n          \"\"\r\n      )\r\n      .then((response) => {\r\n        setArea(\r\n          response.data.map((item) => {\r\n            return <option value={item.pkid}>{item.Area}</option>;\r\n          })\r\n        );\r\n        console.log(\"Area\", response.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  });\r\n\r\n  const dataObj = {\r\n    pkid: pkid,\r\n    Country: countryId,\r\n    Province: provinceId,\r\n    City: cityId,\r\n    Area: AreaId,\r\n    Price: price,\r\n  };\r\n\r\n  useEffect(() => {\r\n    GetAllPrice();\r\n  }, []);\r\n\r\n  const GetAllPrice = () => {\r\n    axios\r\n      .get(TAABEDAR_SERVICE + \"/GetDeliveryPrice\")\r\n      .then((res) => {\r\n        setDeliveryData(res.data);\r\n        console.log(\"get ser\", res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const callAdd = useCallback(() => {\r\n    if (countryId == 0 || countryId == null) {\r\n      alert(\"Please Select Country\");\r\n    } else if (provinceId == 0 || provinceId == null) {\r\n      alert(\"Please Select Province\");\r\n    } else if (cityId == 0 || cityId == null) {\r\n      alert(\"Please Select City\");\r\n    } else if (AreaId == 0 || AreaId == null) {\r\n      alert(\"Please Select Area\");\r\n    } else if (price == \"\" || price == null || price == undefined) {\r\n      alert(\"Please Enter the Price\");\r\n    } else {\r\n      axios\r\n        .post(TAABEDAR_SERVICE + \"/AddDeliveryPrice\", dataObj)\r\n        .then((res) => {\r\n          GetAllPrice();\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n      setPrice(\"\");\r\n      setCountryId(\"\");\r\n      setProviance(\"\");\r\n      setCity(\"\");\r\n      setArea(\"\");\r\n      setPrice(\"\");\r\n      alert(\"Added Successfully\");\r\n    }\r\n  });\r\n\r\n  const editRow = (pkid, countryId, stateId, cityId, areaId, Price) => {\r\n    setPkid(pkid);\r\n    GetCountryForUpdate(countryId, stateId, cityId, areaId);\r\n    setPrice(Price);\r\n    setAddBtn(false);\r\n  };\r\n\r\n  const GetCountryForUpdate = (countryId, stateId, cityId, areaId) => {\r\n    axios\r\n      .get(TAABEDAR_SERVICE + \"/GetCountry\")\r\n      .then((res) => {\r\n        setGetPost(\r\n          res.data.map((item) => {\r\n            return <option value={item.pkid}>{item.Country}</option>;\r\n          })\r\n        );\r\n        setCountryId(countryId);\r\n        GetStateByCountry(countryId, stateId, cityId, areaId);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const GetStateByCountry = (countryId, stateId, cityId, areaId) => {\r\n    axios\r\n      .get(TAABEDAR_SERVICE + \"/GetStateByCountry/\" + countryId + \"\")\r\n      .then((response) => {\r\n        setProviance(\r\n          response.data.map((item) => {\r\n            return <option value={item.pkid}>{item.Province}</option>;\r\n          })\r\n        );\r\n        setProvianceId(stateId);\r\n        GetCityByStateAndCountry(countryId, stateId, cityId, areaId);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const GetCityByStateAndCountry = (countryId, stateId, cityId, areaId) => {\r\n    axios\r\n      .get(\r\n        TAABEDAR_SERVICE +\r\n          \"/GetCityByStateAndCountry/\" +\r\n          countryId +\r\n          \"/\" +\r\n          stateId +\r\n          \"\"\r\n      )\r\n      .then((response) => {\r\n        setCity(\r\n          response.data.map((item) => {\r\n            return <option value={item.pkid}>{item.City}</option>;\r\n          })\r\n        );\r\n        setCityId(cityId);\r\n        GetAreaByCityStateAndCountry(countryId, stateId, cityId, areaId);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const GetAreaByCityStateAndCountry = (countryId, stateId, cityId, areaId) => {\r\n    axios\r\n      .get(\r\n        TAABEDAR_SERVICE +\r\n          \"/GetAreaByCityStateAnndCountry/\" +\r\n          countryId +\r\n          \"/\" +\r\n          stateId +\r\n          \"/\" +\r\n          cityId +\r\n          \"\"\r\n      )\r\n      .then((response) => {\r\n        setArea(\r\n          response.data.map((item) => {\r\n            return <option value={item.pkid}>{item.Area}</option>;\r\n          })\r\n        );\r\n        setAreaId(areaId);\r\n        console.log(\"Area\", response.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const deleteRow = (pkid) => {\r\n    axios\r\n      .get(TAABEDAR_SERVICE + \"/DeleteDeliveryPrice/\" + pkid)\r\n      .then((res) => {\r\n        GetAllPrice();\r\n        console.log(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    alert(\"Deleted Successfully\");\r\n  };\r\n\r\n  const AddBtn = () => (\r\n    <CButton type=\"button\" size=\"md\" id=\"Add-btn\" onClick={callAdd}>\r\n      Add\r\n    </CButton>\r\n  );\r\n\r\n  const UpdateBtn = () => {\r\n    return (\r\n      <CButton type=\"button\" size=\"md\" id=\"Add-btn\" onClick={updateLogic}>\r\n        Update\r\n      </CButton>\r\n    );\r\n  };\r\n\r\n  const updateLogic = () => {\r\n    if (countryId == 0 || countryId == null) {\r\n      alert(\"Please Select Country\");\r\n    } else if (provinceId == null || provinceId == 0) {\r\n      alert(\"Please Select Province\");\r\n    } else if (cityId == null || cityId == 0) {\r\n      alert(\"Please Select City\");\r\n    } else if (AreaId == null || AreaId == 0) {\r\n      alert(\"Please Select Area\");\r\n    } else if (price == \"\" || price == null || price == undefined) {\r\n      alert(\"Please Enter the Price\");\r\n    } else {\r\n      axios\r\n        .post(TAABEDAR_SERVICE + \"/UpdateDeliveryPrice\", dataObj)\r\n        .then((res) => {\r\n          console.log(res);\r\n          GetAllPrice();\r\n          setAddBtn(true);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n      setPrice(\"\");\r\n      setCountryId(\"\");\r\n      setProviance(\"\");\r\n      setCity(\"\");\r\n      setArea(\"\");\r\n      alert(\"Updated Successfully\");\r\n    }\r\n  };\r\n\r\n  // const validate = values => {\r\n  //   const errors = {};\r\n  //   if (!values.Country) {\r\n  //     errors.Country = 'Please Choose Country';\r\n  //   }\r\n\r\n  //   if (!values.Province) {\r\n  //     errors.Province = 'Please Choose Province';\r\n  //   }\r\n\r\n  //   if (!values.City) {\r\n  //     errors.City = 'Please Choose City';\r\n  //   }\r\n\r\n  //   if (!values.Area) {\r\n  //     errors.Area = 'Please Choose Area';\r\n  //   }\r\n\r\n  //   if (!values.Price) {\r\n  //     errors.Price = 'Please Choose Price';\r\n  //   }\r\n  //   return errors;\r\n  // };\r\n\r\n  // const formik = useFormik ({\r\n  //   initialValues: {\r\n  //     pkid: '',\r\n  //     Country: '',\r\n  //     Province: '',\r\n  //     City: '',\r\n  //     Area: '',\r\n  //     Price: '',\r\n  //   },\r\n  //   validate,\r\n  //   onSubmit: values => {\r\n  //     axios\r\n  //       .post (\r\n  //         'http://192.168.1.3:8086/Tabedar_Dashboard/resourses/projectservice/AddDeliveryPrice',\r\n  //         values\r\n  //       )\r\n  //       .then (res => {\r\n  //         GetAllPrice ();\r\n  //       })\r\n  //       .catch (err => {\r\n  //         console.log (err);\r\n  //       });\r\n  //     alert ('Added Successfully');\r\n  //   },\r\n  // });\r\n\r\n  // console.log ('Global', formik.values.Country);\r\n\r\n  return (\r\n    <div>\r\n      <CRow>\r\n        <CCol md=\"3\" />\r\n        <CCol md=\"6\">\r\n          <h1 id=\"ccmaster\">Delivery Price Range</h1>\r\n          <br />\r\n        </CCol>\r\n        <CCol md=\"3\" />\r\n      </CRow>\r\n      <CRow>\r\n        <CCol md=\"4\">\r\n          <CCard>\r\n            <CCardBody>\r\n              <CRow>\r\n                <CCol>\r\n                  <CCard>\r\n                    <CCardHeader>Delivery Price</CCardHeader>\r\n                    <CCardBody>\r\n                      <form>\r\n                        <CFormGroup>\r\n                          <CLabel htmlFor=\"nf-email\">Select Country</CLabel>\r\n                          <CSelect\r\n                            custom\r\n                            name=\"Country\"\r\n                            id=\"Country\"\r\n                            value={countryId}\r\n                            onChange={selectionHandler}\r\n                            // value={formik.values.Country}\r\n                            // onChange={Formik.handleChange}\r\n                            // onSelect={() => {\r\n                            //   formik.handleChange()\r\n                            //   console.log ('af', formik.values.Country);\r\n                            //   callProvince (formik.values.Country);\r\n                            // }}\r\n                          >\r\n                            <option value=\"0\">Country</option>\r\n                            {getPost}\r\n                          </CSelect>\r\n                        </CFormGroup>\r\n                        <CFormGroup>\r\n                          <CLabel htmlFor=\"nf-email\">Select Province</CLabel>\r\n                          <CSelect\r\n                            custom\r\n                            name=\"Province\"\r\n                            id=\"province\"\r\n                            value={provinceId}\r\n                            onChange={(event) => {\r\n                              setProvianceId(event.target.value);\r\n                              callCity(event.target.value);\r\n                            }}\r\n                            // value={formik.values.Province}\r\n                            // onChange={() => {\r\n                            //   formik.handleChange ();\r\n                            //   console.log ('as', formik.values.Province);\r\n                            //   // callCity (formik.values.Province);\r\n                            // }}\r\n                          >\r\n                            <option value=\"0\">Province </option>\r\n                            {province}\r\n                          </CSelect>\r\n                        </CFormGroup>\r\n                        <CFormGroup>\r\n                          <CLabel htmlFor=\"nf-email\">Select City</CLabel>\r\n                          <CSelect\r\n                            custom\r\n                            name=\"City\"\r\n                            id=\"city\"\r\n                            value={cityId}\r\n                            onChange={(event) => {\r\n                              callArea(event.target.value);\r\n                              setCityId(event.target.value);\r\n                            }}\r\n                            // value={formik.values.City}\r\n                            // onChange={formik.handleChange}\r\n                          >\r\n                            <option value=\"0\">City</option>\r\n                            {city}\r\n                          </CSelect>\r\n                        </CFormGroup>\r\n                        <CFormGroup>\r\n                          <CLabel htmlFor=\"nf-email\">Select Area</CLabel>\r\n                          <CSelect\r\n                            custom\r\n                            name=\"Area\"\r\n                            id=\"Area\"\r\n                            value={AreaId}\r\n                            onChange={(event) => {\r\n                              setAreaId(event.target.value);\r\n                            }}\r\n                            // value={formik.values.Area}\r\n                            // onChange={formik.handleChange}\r\n                          >\r\n                            <option value=\"0\">Area</option>\r\n                            {Area}\r\n                          </CSelect>\r\n                        </CFormGroup>\r\n                        <CFormGroup>\r\n                          <CLabel>Price</CLabel>\r\n                          <CInput\r\n                            type=\"number\"\r\n                            name=\"price\"\r\n                            placeholder=\"Enter Price\"\r\n                            value={price}\r\n                            onChange={(e) => {\r\n                              setPrice(e.target.value);\r\n                            }}\r\n                            // value={formik.values.Price}\r\n                            // onChange={formik.handleChange}\r\n                          />\r\n                        </CFormGroup>\r\n                        {addBtn === true ? <AddBtn /> : <UpdateBtn />}\r\n                      </form>\r\n                    </CCardBody>\r\n                  </CCard>\r\n                </CCol>\r\n              </CRow>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n\r\n        <CCol col=\"8\">\r\n          <CCard>\r\n            <CCardBody>\r\n              <CRow>\r\n                <CCol>\r\n                  <CCard>\r\n                    <CCardHeader>Added Delivery Price</CCardHeader>\r\n                    <CCardBody>\r\n                      <CDataTable\r\n                        items={deliveryData}\r\n                        fields={fields}\r\n                        striped\r\n                        itemsPerPage={5}\r\n                        size=\"sm\"\r\n                        pagination\r\n                        sorter\r\n                        tableFilter={table}\r\n                        itemsPerPageSelect={items}\r\n                        scopedSlots={{\r\n                          Action: (item) => (\r\n                            <td>\r\n                              <CButton\r\n                                size=\"sm\"\r\n                                id=\"war-btn\"\r\n                                onClick={() => {\r\n                                  editRow(\r\n                                    item.pkid,\r\n                                    item.countryId,\r\n                                    item.stateId,\r\n                                    item.cityId,\r\n                                    item.areaId,\r\n                                    item.maxPrice\r\n                                  );\r\n                                }}\r\n                              >\r\n                                <EditIcon />\r\n                                {item.status}\r\n                              </CButton>\r\n                              <CButton\r\n                                size=\"sm\"\r\n                                id=\"war-btn1\"\r\n                                onClick={() => {\r\n                                  deleteRow(item.pkid);\r\n                                }}\r\n                              >\r\n                                <DeleteSharpIcon />\r\n                                {item.status}\r\n                              </CButton>\r\n                            </td>\r\n                          ),\r\n                          Price_per_KM: (item) => <td>{item.maxPrice}</td>,\r\n                        }}\r\n                      />\r\n                    </CCardBody>\r\n                  </CCard>\r\n                </CCol>\r\n              </CRow>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeliveryPrice;\r\n"],"sourceRoot":""}