{"version":3,"sources":["services/service.js","views/users/UsersData.js","views/dashboard/Dashboard.js"],"names":["TAABEDAR_SERVICE","usersData","id","Name","password","Email","Address1","Address2","Mobile","DLNo","DocName","Date","Age","City","State","Country","Area","OrdNo","Store","Amount","Total_Sales","Total_Orders","Description","Orders_Completion_Average","Feedback_Title","Price_per_KM","Employee_Type","Status","Type","Merchant_Type","Location","Sub_Orders","Rider","Order_Amount","Discount","Delivery_charge","Final_Amount","Service_Charge","WidgetsDropdown","lazy","fields","key","fields2","fields4","fields3","table","placeholder","label","items","values","Dashboard","history","useHistory","useState","responseData","setresponseData","responseData1","setresponseData1","responseData2","setresponseData2","responseData3","setresponseData3","DailytotalOrders","SetDailytotalOrders","DailyregisterMerchant","SetDailyregisterMerchant","DailyregisterdUsers","SetDailyregisterdUsers","DailyactiveRiders","SetDailyactiveRiders","MonthlytotalOrders","SetMonthlytotalOrders","MonthlyregistereMerchant","SetMonthlyregisterMerchant","MonthlyregisterdUsers","SetMonthlyregisterdUsers","MonthlyactiveRiders","SetMonthlyactiveRiders","OveralltotalOrders","SetOveralltotalOrders","OverallregisterMerchant","SetOverallregisterMerchant","OverallregisterdUsers","SetOverallregisterdUsers","OverallactiveRiders","SetOverallactiveRiders","responseDataSalesGraph","SetresponseDataSalesGraph","responseDataRegStats","SetresponseDataRegStats","responseDataOrderStats","SetresponseDataOrderStats","DashBoardUpdates","React","useCallback","axios","method","url","headers","then","response","console","log","data","totalOrders","registerMerchant","activeUser","catch","error","PendingOrders","CompletedOrders","NewMerchantRequest","NewRiderRequest","options","title","text","subtitle","xAxis","categories","series","type","colorByPoint","showInLegend","options1","name","marker","lineWidth","lineColor","Highcharts","getOptions","colors","fillColor","options2","chart","yAxis","labels","formatter","this","value","tooltip","crosshairs","shared","plotOptions","spline","radius","symbol","useEffect","md","highcharts","xs","sm","hover","striped","bordered","sorter","tableFilter","itemsPerPageSelect","size","itemsPerPage","pagination","scopedSlots","item","onClick","push","orderNumber","orderDate","orderType","totalAmount","Action","pkid","alert","status","merchantType","Shop","Phone","ownerName","Address","shopAdress","regDate","params","language_code"],"mappings":"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","file":"static/js/90.8169ccb6.chunk.js","sourcesContent":["const TAABEDAR_SERVICE =\r\n  'http://192.168.1.3:8086/Tabedar_Dashboard/resourses/projectservice';\r\n\r\nexport default TAABEDAR_SERVICE;\r\n","const usersData = [\n \n  {id: 1, Name: 'Samppa Nori',password:'adgn@123',Email:'Abcd123@gmail.com',Address1:'1ts cross mysuru', Address2:'1ts cross mysuru',Mobile:'9638520147',DLNo:'963258741021',DocName:'#123sdfdfghdf', Date: '2018/01/01', Age: '19', City: 'Mysuru',State:'Karnataka',Country:'America',Area:'saraswathipuram',OrdNo:'1002',Store:'Biryaniwala',Amount:'1500',Total_Sales:'1298',Total_Orders:'100',Description:'very Good Services',Orders_Completion_Average:'78%',Feedback_Title:'good',Price_per_KM:'40',Employee_Type:\"manager\",Status:'working',Type:'Store manager',Merchant_Type:'REG-V',Location:'Mysore',Sub_Orders:'1',Rider:'Shabaz',Order_Amount:'1000',Discount:'300',Delivery_charge:'100',Final_Amount:'800',Service_Charge:'15'},\n  {id: 2, Name: 'Estavan Lykos',password:'adgn@123',Email:'Abcd123@gmail.com',Address1:'1ts cross mysuru',Address2:'1ts cross mysuru',Mobile:'9638520147',DLNo:'963258741021',DocName:'#123sdfdfghdf', Date: '2018/02/01', Age: '20', City: 'Mysuru',State:'Karnataka',Country:'New Zealand',Area:'saraswathipuram',OrdNo:'1003',Store:'Biryaniwala',Amount:'1500',Total_Sales:'1298',Total_Orders:'100',Description:'very Good Services',Orders_Completion_Average:'78%',Feedback_Title:'good',Price_per_KM:'40',Employee_Type:\"Delivery Boy\",Status:'working',Type:'Store manager',Merchant_Type:'Non-REG-V',Location:'Mysore',Sub_Orders:'4',Rider:'Shabaz',Order_Amount:'1000',Discount:'300',Delivery_charge:'100',Final_Amount:'800',Service_Charge:'15'},\n  {id: 3, Name: 'Chetan Mohamed',password:'adgn@123',Email:'Abcd123@gmail.com',Address1:'1ts cross mysuru', Address2:'1ts cross mysuru',Mobile:'9638520147',DLNo:'963258741021',DocName:'#123sdfdfghdf', Date: '2018/02/01', Age: '22', City: 'Mysuru',State:'Karnataka',Country:'Iraq',Area:'saraswathipuram',OrdNo:'1004',Store:'Biryaniwala',Amount:'1500',Total_Sales:'1298',Total_Orders:'100',Description:'very Good Services',Orders_Completion_Average:'78%',Feedback_Title:'good',Price_per_KM:'40',Employee_Type:\"Watchmen\",Status:'working',Type:'Rider',Merchant_Type:'Non-Partner-V',Location:'Mysore',Sub_Orders:'2',Rider:'Shabaz',Order_Amount:'1000',Discount:'300',Delivery_charge:'100',Final_Amount:'800',Service_Charge:'15'},\n  {id: 4, Name: 'Derick Maximinus', password:'adgn@123',Email:'Abcd123@gmail.com',Address1:'1ts cross mysuru', Address2:'1ts cross mysuru',Mobile:'9638520147',DLNo:'963258741021',DocName:'#123sdfdfghdf',Date: '2018/03/01', Age: '23', City: 'Mysuru',State:'Karnataka',Country:'Saudi Arabia',Area:'saraswathipuram',OrdNo:'1005',Store:'Biryaniwala',Amount:'1500',Total_Sales:'1298',Total_Orders:'100',Description:'very Good Services',Orders_Completion_Average:'78%',Feedback_Title:'good',Price_per_KM:'40',Employee_Type:\"Waiter\",Status:'working',Type:'Store manager',Merchant_Type:'REG-V',Location:'Mysore',Sub_Orders:'1',Rider:'Shabaz',Order_Amount:'1000',Discount:'300',Delivery_charge:'100',Final_Amount:'800',Service_Charge:'15'},\n  {id: 5, Name: 'Friderik Dávid',password:'adgn@123',Email:'Abcd123@gmail.com',Address1:'1ts cross mysuru',Address2:'1ts cross mysuru',Mobile:'9638520147',DLNo:'963258741021',DocName:'#123sdfdfghdf', Date: '2018/01/21', Age: '20', City: 'Mysuru',State:'Karnataka',Country:'Bangladesh',Area:'saraswathipuram',OrdNo:'1006',Store:'Biryaniwala',Amount:'1500',Total_Sales:'1298',Total_Orders:'100',Description:'very Good Services',Orders_Completion_Average:'78%',Feedback_Title:'good',Price_per_KM:'40',Employee_Type:\"Sweeper\",Status:'working',Type:'Rider',Merchant_Type:'REG-V',Location:'Mysore',Sub_Orders:'3',Rider:'Shabaz',Order_Amount:'1000',Discount:'300',Delivery_charge:'100',Final_Amount:'800',Service_Charge:'15'},\n  {id: 6, Name: 'Yiorgos Avraamu',password:'adgn@123',Email:'Abcd123@gmail.com',Address1:'1ts cross mysuru',Address2:'1ts cross mysuru',Mobile:'9638520147',DLNo:'963258741021',DocName:'#123sdfdfghdf', Date: '2018/01/01', Age: '20', City: 'Mysuru',State:'Karnataka',Country:'Denmark',Area:'saraswathipuram',OrdNo:'1007',Store:'Biryaniwala',Amount:'1500',Total_Sales:'1298',Total_Orders:'100',Description:'very Good Services',Orders_Completion_Average:'78%',Feedback_Title:'good',Price_per_KM:'40',Employee_Type:\"manager\",Status:'working',Type:'Store manager',Merchant_Type:'REG-V',Location:'Mysore',Sub_Orders:'1',Rider:'Shabaz',Order_Amount:'1000',Discount:'300',Delivery_charge:'100',Final_Amount:'800',Service_Charge:'15'},\n  {id: 7, Name: 'Avram Tarasios', password:'adgn@123',Email:'Abcd123@gmail.com',Address1:'1ts cross mysuru',Address2:'1ts cross mysuru',Mobile:'9638520147',DLNo:'963258741021',DocName:'#123sdfdfghdf',Date: '2018/02/01', Age: '21', City: 'Mysuru',State:'Karnataka',Country:'India',Area:'saraswathipuram',OrdNo:'1008',Store:'Biryaniwala',Amount:'1500',Total_Sales:'1298',Total_Orders:'100',Description:'very Good Services',Orders_Completion_Average:'78%',Feedback_Title:'good',Price_per_KM:'40',Employee_Type:\"manager\",Status:'working',Type:'Store manager',Merchant_Type:'REG-V',Location:'Mysore',Sub_Orders:'1',Rider:'Shabaz',Order_Amount:'1000',Discount:'300',Delivery_charge:'100',Final_Amount:'800',Service_Charge:'15'},\n  {id: 8, Name: 'Quintin Ed', password:'adgn@123',Email:'Abcd123@gmail.com',Address1:'1ts cross mysuru',Address2:'1ts cross mysuru',Mobile:'9638520147',DLNo:'963258741021',DocName:'#123sdfdfghdf',Date: '2018/02/01', Age: '32', City: 'Mysuru',State:'Karnataka',Country:'India',Area:'saraswathipuram',OrdNo:'1009',Store:'Biryaniwala',Amount:'1500',Total_Sales:'1298',Total_Orders:'100',Description:'very Good Services',Orders_Completion_Average:'78%',Feedback_Title:'good',Price_per_KM:'40',Employee_Type:\"manager\",Status:'working',Type:'Store manager',Merchant_Type:'REG-V',Location:'Mysore',Sub_Orders:'1',Rider:'Shabaz',Order_Amount:'1000',Discount:'300',Delivery_charge:'100',Final_Amount:'800',Service_Charge:'15'},\n  {id: 9, Name: 'Enéas Kwadwo',password:'adgn@123',Email:'Abcd123@gmail.com',Address1:'1ts cross mysuru',Address2:'1ts cross mysuru',Mobile:'9638520147',DLNo:'963258741021',DocName:'#123sdfdfghdf', Date: '2018/03/01', Age: '56', City: 'Mysuru',State:'Karnataka',Country:'India',Area:'saraswathipuram',OrdNo:'10010',Store:'Biryaniwala',Amount:'1500',Total_Sales:'1298',Total_Orders:'100',Description:'very Good Services',Orders_Completion_Average:'78%',Feedback_Title:'good',Price_per_KM:'40',Employee_Type:\"manager\",Status:'working',Type:'Store manager',Merchant_Type:'REG-V',Location:'Mysore',Sub_Orders:'1',Rider:'Shabaz',Order_Amount:'1000',Discount:'300',Delivery_charge:'100',Final_Amount:'800',Service_Charge:'15'},\n  {id: 10, Name: 'John Doe', password:'adgn@123',Email:'Abcd123@gmail.com',Address1:'1ts cross mysuru', Address2:'1ts cross mysuru',Mobile:'9638520147',DLNo:'963258741021',DocName:'#123sdfdfghdf', Date: '2018/01/01', Age: '18', City: 'Mysuru',State:'Karnataka',Country:'India',Area:'saraswathipuram',OrdNo:'1001',Store:'Biryaniwala',Amount:'1500',Total_Sales:'1298',Total_Orders:'100',Description:'very Good Services',Orders_Completion_Average:'78%',Feedback_Title:'good',Price_per_KM:'40',Employee_Type:\"manager\",Status:'working',Type:'Store manager',Merchant_Type:'REG-V',Location:'Mysore',Sub_Orders:'1',Rider:'Shabaz',Order_Amount:'1000',Discount:'300',Delivery_charge:'100',Final_Amount:'800',Service_Charge:'15'\n},\n  \n]\n\nexport default usersData\n\n","import React, {lazy, useState, Component} from 'react';\nimport axios from 'axios';\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CDataTable,\n  CRow,\n  CButton,\n  CModal,\n  CModalBody,\n  CModalFooter,\n  CModalHeader,\n  CModalTitle,\n  CLink,\n} from '@coreui/react';\nimport TAABEDAR_SERVICE from 'src/services/service';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport {render} from 'react-dom';\nimport DeleteSharpIcon from '@material-ui/icons/DeleteSharp';\nimport {CChartBar, CChartLine} from '@coreui/react-chartjs';\nimport usersData from '../users/UsersData';\nimport '../../style.css';\nimport AssignmentIndIcon from '@material-ui/icons/AssignmentInd';\nimport ThumbUpAltSharpIcon from '@material-ui/icons/ThumbUpAltSharp';\nimport {useHistory} from 'react-router';\nconst WidgetsDropdown = lazy (() => import ('../widgets/WidgetsDropdown.js'));\nconst fields = [\n  {key: 'Sl No.'},\n  {key: 'Order Number'},\n  {key: 'Order Date'},\n  {key: 'Order Type'},\n  {key: 'Order Amount'},\n];\n\nconst fields2 = [\n  {key: 'Sl No.'},\n  {key: 'Action'},\n  {key: 'Merchant Type'},\n  {key: 'Name'},\n  {key: 'Email'},\n  {key: 'Mobile'},\n  {key: 'Owner Name'},\n  {key: 'Address'},\n  {key: 'Reg Date'},\n];\nconst fields4 = [\n  {key: 'Sl No.'},\n  {key: 'Action'},\n  {key: 'Name'},\n  {key: 'Email'},\n  {key: 'Mobile'},\n  {key: 'DL No.'},\n  {key: 'Reg Date'},\n];\n\nconst fields3 = [\n  {key: 'Sl No.'},\n  {key: 'Order Number'},\n  {key: 'Order Date'},\n  {key: 'Order Type'},\n  {key: 'Order Amount'},\n];\n\nconst table = {placeholder: 'Search here...', label: 'Search:  '};\nconst items = {label: 'Rows:', values: [5, 10, 25, 50, 75, 100]};\n\nconst Dashboard = () => {\n  const history = useHistory ();\n\n  const [responseData, setresponseData] = useState ('');\n  const [responseData1, setresponseData1] = useState ('');\n  const [responseData2, setresponseData2] = useState ('');\n  const [responseData3, setresponseData3] = useState ('');\n\n  const [DailytotalOrders, SetDailytotalOrders] = useState ('');\n  const [DailyregisterMerchant, SetDailyregisterMerchant] = useState ('');\n  const [DailyregisterdUsers, SetDailyregisterdUsers] = useState ('');\n  const [DailyactiveRiders, SetDailyactiveRiders] = useState ('');\n\n  const [MonthlytotalOrders, SetMonthlytotalOrders] = useState ('');\n  const [MonthlyregistereMerchant, SetMonthlyregisterMerchant] = useState ('');\n  const [MonthlyregisterdUsers, SetMonthlyregisterdUsers] = useState ('');\n  const [MonthlyactiveRiders, SetMonthlyactiveRiders] = useState ('');\n\n  const [OveralltotalOrders, SetOveralltotalOrders] = useState ('');\n  const [OverallregisterMerchant, SetOverallregisterMerchant] = useState ('');\n  const [OverallregisterdUsers, SetOverallregisterdUsers] = useState ('');\n  const [OverallactiveRiders, SetOverallactiveRiders] = useState ('');\n\n  const [info, setInfo] = useState (false);\n\n  const [responseDataSalesGraph, SetresponseDataSalesGraph] = useState ([]);\n  const [responseDataRegStats, SetresponseDataRegStats] = useState ([]);\n  const [responseDataOrderStats, SetresponseDataOrderStats] = useState ([]);\n\n  const DashBoardUpdates = React.useCallback (() => {\n    axios ({\n      method: 'GET',\n      url: TAABEDAR_SERVICE + '/DashBoardUpdates',\n      headers: {\n        'content-type': 'application/json',\n      },\n    })\n      .then (response => {\n        console.log ('response:' + response.data);\n        SetDailytotalOrders (response.data[0].totalOrders);\n        SetDailyregisterMerchant (response.data[0].registerMerchant);\n        SetDailyregisterdUsers (response.data[0].activeUser);\n        SetDailyactiveRiders (response.data[0].activeUser);\n\n        SetMonthlytotalOrders (response.data[1].totalOrders);\n        SetMonthlyregisterMerchant (response.data[1].registerMerchant);\n        SetMonthlyregisterdUsers (response.data[1].activeUser);\n        SetMonthlyactiveRiders (response.data[1].activeUser);\n\n        SetOveralltotalOrders (response.data[2].totalOrders);\n        SetOverallregisterMerchant (response.data[2].registerMerchant);\n        SetOverallregisterdUsers (response.data[2].activeUser);\n        SetOverallactiveRiders (response.data[2].activeUser);\n      })\n      .catch (error => {\n        console.log (error);\n      });\n    axios ({\n      method: 'GET',\n      url: TAABEDAR_SERVICE + '/SalesGraph',\n      headers: {\n        'content-type': 'application/json',\n      },\n    })\n      .then (response => {\n        console.log ('responseDataSalesGraph:' + response.data);\n        SetresponseDataSalesGraph (response.data);\n      })\n      .catch (error => {\n        console.log (error);\n      });\n    axios ({\n      method: 'GET',\n      url: TAABEDAR_SERVICE + '/RegStats',\n      headers: {\n        'content-type': 'application/json',\n      },\n    })\n      .then (response => {\n        console.log ('SetresponseDataRegStats:' + response.data);\n        SetresponseDataRegStats (response.data);\n      })\n      .catch (error => {\n        console.log (error);\n      });\n    //Order Statistics\n    axios ({\n      method: 'GET',\n      url: TAABEDAR_SERVICE + '/OrderStats',\n      headers: {\n        'content-type': 'application/json',\n      },\n    })\n      .then (response => {\n        console.log ('SetresponseDataOrderStats:' + response.data);\n        SetresponseDataOrderStats (response.data);\n      })\n      .catch (error => {\n        console.log (error);\n      });\n  }, []);\n\n  const AcceptRider = pkid => {\n    axios ({\n      method: 'GET',\n      url: TAABEDAR_SERVICE + '/AcceptRider/' + pkid + '',\n      headers: {\n        'content-type': 'application/json',\n      },\n      params: {\n        language_code: 'en',\n      },\n    })\n      .then (response => {\n        if (response.data == true) {\n          alert ('Rider Request Accepted');\n          NewRiderRequest ();\n        } else {\n          alert ('Failed To Accept Rider Request');\n        }\n      })\n      .catch (error => {\n        console.log (error);\n      });\n  };\n\n  const RejectRider = pkid => {\n    axios ({\n      method: 'GET',\n      url: TAABEDAR_SERVICE + '/RejectRider/' + pkid + '',\n      headers: {\n        'content-type': 'application/json',\n      },\n      params: {\n        language_code: 'en',\n      },\n    })\n      .then (response => {\n        if (response.data == true) {\n          alert ('Rider Request Rejected');\n          NewRiderRequest ();\n        } else {\n          alert ('Failed To Reject Rider Request');\n        }\n      })\n      .catch (error => {\n        console.log (error);\n      });\n  };\n\n  const PendingOrders = React.useCallback (() => {\n    axios ({\n      method: 'GET',\n      url: TAABEDAR_SERVICE + '/DashboardPendingOrder',\n      headers: {\n        'content-type': 'application/json',\n      },\n    })\n      .then (response => {\n        console.log ('pen response:' + response.data);\n        setresponseData (response.data);\n      })\n      .catch (error => {\n        console.log (error);\n      });\n  }, []);\n\n  const CompletedOrders = React.useCallback (() => {\n    axios ({\n      method: 'GET',\n      url: TAABEDAR_SERVICE + '/DashboardCompletedOrder',\n      headers: {\n        'content-type': 'application/json',\n      },\n    })\n      .then (response => {\n        console.log ('response:' + response.data);\n        setresponseData1 (response.data);\n      })\n      .catch (error => {\n        console.log (error);\n      });\n  }, []);\n\n  const NewMerchantRequest = React.useCallback (() => {\n    axios ({\n      method: 'GET',\n      url: TAABEDAR_SERVICE + '/DashboardVendorRequest',\n      headers: {\n        'content-type': 'application/json',\n      },\n    })\n      .then (response => {\n        console.log ('response:' + response.data);\n        setresponseData2 (response.data);\n      })\n      .catch (error => {\n        console.log (error);\n      });\n  }, []);\n\n  const NewRiderRequest = React.useCallback (() => {\n    axios ({\n      method: 'GET',\n      url: TAABEDAR_SERVICE + '/DashboardRiderRequest',\n      headers: {\n        'content-type': 'application/json',\n      },\n    })\n      .then (response => {\n        console.log ('response:' + response.data);\n        setresponseData3 (response.data);\n      })\n      .catch (error => {\n        console.log (error);\n      });\n  }, []);\n\n  const AcceptVendor = pkid => {\n    axios ({\n      method: 'GET',\n      url: TAABEDAR_SERVICE + '/AcceptVendor/' + pkid + '',\n      headers: {\n        'content-type': 'application/json',\n      },\n    })\n      .then (response => {\n        if (response.data == true) {\n          alert ('Vendor Sucessfully Accepted');\n          NewMerchantRequest ();\n        } else {\n          alert ('Failed To Accept Vendor');\n        }\n      })\n      .catch (error => {\n        console.log (error);\n      });\n  };\n\n  const RejectVendor = pkid => {\n    axios ({\n      method: 'GET',\n      url: TAABEDAR_SERVICE + '/RejectVendor/' + pkid + '',\n      headers: {\n        'content-type': 'application/json',\n      },\n    })\n      .then (response => {\n        if (response.data == true) {\n          alert ('Vendor Rejected Sucessfully');\n          NewMerchantRequest ();\n        } else {\n          alert ('Failed To Reject Vendor');\n        }\n      })\n      .catch (error => {\n        console.log (error);\n      });\n  };\n\n  const options = {\n    title: {\n      text: 'Orders Statistics',\n    },\n    subtitle: {\n      text: 'Summary',\n    },\n    xAxis: {\n      categories: [\n        'Jan',\n        'Feb',\n        'Mar',\n        'Apr',\n        'May',\n        'Jun',\n        'Jul',\n        'Aug',\n        'Sep',\n        'Oct',\n        'Nov',\n        'Dec',\n      ],\n    },\n    series: [\n      {\n        type: 'column',\n        colorByPoint: true,\n        data: responseDataSalesGraph,\n        showInLegend: false,\n      },\n    ],\n  };\n\n  const options1 = {\n    title: {\n      text: 'Registration Statistics',\n    },\n    xAxis: {\n      categories: [\n        'Jan',\n        'Feb',\n        'Mar',\n        'Apr',\n        'May',\n        'Jun',\n        'Jul',\n        'Aug',\n        'Sep',\n        'Oct',\n        'Nov',\n        'Dec',\n      ],\n    },\n    series: [\n      {\n        type: 'column',\n        name: 'Users',\n        data: responseDataRegStats[0],\n      },\n      {\n        type: 'column',\n        name: 'Rider',\n        data: responseDataRegStats[1],\n      },\n      {\n        type: 'column',\n        name: 'Vendor',\n        data: responseDataRegStats[2],\n      },\n      {\n        type: 'spline',\n        name: 'Average',\n        data: responseDataRegStats[3],\n        marker: {\n          lineWidth: 2,\n          lineColor: Highcharts.getOptions ().colors[3],\n          fillColor: 'white',\n        },\n      },\n    ],\n  };\n\n  const options2 = {\n    chart: {\n      type: 'spline',\n    },\n    title: {\n      text: 'Order Statistics',\n    },\n    subtitle: {\n      text: 'Completed Orders / Active Orders',\n    },\n    xAxis: {\n      categories: [\n        'Jan',\n        'Feb',\n        'Mar',\n        'Apr',\n        'May',\n        'Jun',\n        'Jul',\n        'Aug',\n        'Sep',\n        'Oct',\n        'Nov',\n        'Dec',\n      ],\n    },\n    yAxis: {\n      title: {\n        text: 'Values',\n      },\n      labels: {\n        formatter: function () {\n          return this.value;\n        },\n      },\n    },\n    tooltip: {\n      crosshairs: true,\n      shared: true,\n    },\n    plotOptions: {\n      spline: {\n        marker: {\n          radius: 4,\n          lineColor: '#666666',\n          lineWidth: 1,\n        },\n      },\n    },\n    series: [\n      {\n        name: 'Completed Orders',\n        marker: {\n          symbol: 'square',\n        },\n        data: responseDataOrderStats[0],\n      },\n      {\n        name: 'Active Orders',\n        marker: {\n          symbol: 'diamond',\n        },\n        data: responseDataOrderStats[1],\n      },\n    ],\n  };\n\n  React.useEffect (() => {\n    DashBoardUpdates ();\n    PendingOrders ();\n    CompletedOrders ();\n    NewMerchantRequest ();\n    NewRiderRequest ();\n  }, []);\n\n  return (\n    <div>\n      <WidgetsDropdown />\n      <CRow>\n        <CCol md=\"9\">\n          <CCard>\n            <CCardBody>\n              <CRow>\n                <CCol>\n                  <CCard>\n                    <CCardHeader>Order Statistics</CCardHeader>\n                    <CCardBody>\n                      <HighchartsReact\n                        highcharts={Highcharts}\n                        options={options}\n                      />\n                    </CCardBody>\n                  </CCard>\n                </CCol>\n              </CRow>\n            </CCardBody>\n          </CCard>\n        </CCol>\n        <CCol md=\"3\">\n          <CCard id=\"chight\">\n            <CCardBody>\n              <CRow>\n                <CCol>\n                  <CCard>\n                    <CCardHeader>Daily Updates</CCardHeader>\n                    <CCardBody>\n                      <CRow>\n                        <CCol md=\"9\" id=\"Dashp1\">\n                          <p>Total Orders :</p>\n                          <p>Active Merchant :</p>\n                          <p>Registerd Users :</p>\n                          <p>Active Riders :</p>\n                        </CCol>\n                        <CCol md=\"\" id=\"p2\">\n                          <p> {DailytotalOrders}</p>\n                          <p> {DailyregisterMerchant}</p>\n                          <p> {DailyregisterdUsers}</p>\n                          <p> {DailyactiveRiders}</p>\n                        </CCol>\n                      </CRow>\n                    </CCardBody>\n                  </CCard>\n                </CCol>\n              </CRow>\n            </CCardBody>\n          </CCard>\n\n          <CCard id=\"chight1\">\n            <CCardBody>\n              <CRow>\n                <CCol>\n                  <CCard>\n                    <CCardHeader>Monthly Updates</CCardHeader>\n                    <CCardBody>\n                      <CRow>\n                        <CCol md=\"9\" id=\"Dashp1\">\n                          <p>Total Orders :</p>\n                          <p>Active Merchant :</p>\n                          <p>Registerd Users :</p>\n                          <p>Active Riders :</p>\n                        </CCol>\n                        <CCol md=\"3\" id=\"p2\">\n                          <p> {MonthlytotalOrders}</p>\n                          <p> {MonthlyregistereMerchant}</p>\n                          <p> {MonthlyregisterdUsers}</p>\n                          <p> {MonthlyactiveRiders}</p>\n                        </CCol>\n                      </CRow>\n                    </CCardBody>\n                  </CCard>\n                </CCol>\n              </CRow>\n            </CCardBody>\n          </CCard>\n\n          <CCard id=\"chight1\">\n            <CCardBody>\n              <CRow>\n                <CCol>\n                  <CCard>\n                    <CCardHeader>Overall Update</CCardHeader>\n                    <CCardBody>\n                      <CRow>\n                        <CCol md=\"9\" id=\"Dashp1\">\n                          <p>Total Orders :</p>\n                          <p>Active Merchant :</p>\n                          <p>Registerd Users :</p>\n                          <p>Active Riders :</p>\n                        </CCol>\n                        <CCol md=\"3\" id=\"p2\">\n                          <p> {OveralltotalOrders}</p>\n                          <p> {OverallregisterMerchant}</p>\n                          <p> {OverallregisterdUsers}</p>\n                          <p> {OverallactiveRiders}</p>\n                        </CCol>\n                      </CRow>\n                    </CCardBody>\n                  </CCard>\n                </CCol>\n              </CRow>\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n      <CRow>\n        <CCol xs=\"12\" sm=\"12\" md=\"6\">\n          <CCard>\n            <CCardBody>\n              <CRow>\n                <CCol>\n                  <CCard>\n                    <CCardHeader>Registrations Statistics</CCardHeader>\n                    <CCardBody>\n                      <HighchartsReact\n                        highcharts={Highcharts}\n                        options={options1}\n                      />\n                    </CCardBody>\n                  </CCard>\n                </CCol>\n              </CRow>\n            </CCardBody>\n          </CCard>\n        </CCol>\n        <CCol xs=\"12\" sm=\"12\" md=\"6\">\n          <CCard>\n            <CCardBody>\n              <CRow>\n                <CCol>\n                  <CCard>\n                    <CCardHeader>Order Statistics</CCardHeader>\n                    <CCardBody>\n                      <HighchartsReact\n                        highcharts={Highcharts}\n                        options={options2}\n                      />\n                    </CCardBody>\n                  </CCard>\n                </CCol>\n              </CRow>\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n\n      <CRow>\n        <CCol xs=\"12\" sm=\"12\" md=\"6\">\n          <CCard>\n            <CCardBody>\n              <CRow>\n                <CCol>\n                  <CCard>\n                    <CCardHeader>Pending Orders</CCardHeader>\n                    <CCardBody>\n                      <CDataTable\n                        items={responseData}\n                        fields={fields3}\n                        hover\n                        striped\n                        bordered\n                        sorter\n                        tableFilter={table}\n                        itemsPerPageSelect={items}\n                        size=\"sm\"\n                        itemsPerPage={4}\n                        pagination\n                        scopedSlots={{\n                          'Order Number': item => (\n                            <td>\n                              <CButton\n                                id=\"order-list\"\n                                onClick={() => {\n                                  history.push ('/DashboardOrderDetails', {\n                                    data: item,\n                                  });\n                                }}\n                              >\n                                {item.orderNumber}\n                              </CButton>\n                            </td>\n                          ),\n                          'Sl No.': item => <td>{item.id}</td>,\n                          'Order Date': item => <td>{item.orderDate}</td>,\n                          'Order Type': item => <td>{item.orderType} </td>,\n                          'Order Amount': item => <td> {item.totalAmount}</td>,\n                        }}\n                      />\n                    </CCardBody>\n                  </CCard>\n                </CCol>\n              </CRow>\n            </CCardBody>\n          </CCard>\n        </CCol>\n        <CCol xs=\"12\" sm=\"12\" md=\"6\">\n          <CCard>\n            <CCardBody>\n              <CRow>\n                <CCol>\n                  <CCard>\n                    <CCardHeader>Completed Orders</CCardHeader>\n                    <CCardBody>\n                      <CDataTable\n                        items={responseData1}\n                        fields={fields}\n                        hover\n                        striped\n                        bordered\n                        sorter\n                        tableFilter={table}\n                        itemsPerPageSelect={items}\n                        size=\"sm\"\n                        itemsPerPage={4}\n                        pagination\n                        scopedSlots={{\n                          'Order Number': item => (\n                            <td>\n                              <CButton\n                                id=\"order-list\"\n                                onClick={() => {\n                                  history.push ('/DashboardOrderDetails', {\n                                    data: item,\n                                  });\n                                }}\n                              >\n                                {item.orderNumber}\n                              </CButton>\n                            </td>\n                          ),\n                          'Sl No.': item => <td>{item.id}</td>,\n                          'Order Date': item => <td>{item.orderDate}</td>,\n                          'Order Type': item => <td>{item.orderType} </td>,\n                          'Order Amount': item => <td> {item.totalAmount}</td>,\n                        }}\n                      />\n                    </CCardBody>\n                  </CCard>\n                </CCol>\n              </CRow>\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n      <CRow>\n        <CCol sm=\"12\" md=\"6\">\n          <CCard>\n            <CCardBody>\n              <CRow>\n                <CCol>\n                  <CCard>\n                    <CCardHeader>New Merchant Request</CCardHeader>\n                    <CCardBody>\n                      <CDataTable\n                        items={responseData2}\n                        fields={fields2}\n                        hover\n                        striped\n                        bordered\n                        sorter\n                        tableFilter={table}\n                        itemsPerPageSelect={items}\n                        size=\"sm\"\n                        itemsPerPage={4}\n                        pagination\n                        scopedSlots={{\n                          Action: item => (\n                            <td>\n                              <CRow>\n                                <CCol md=\"6\">\n                                  <CButton\n                                    size=\"sm\"\n                                    onClick={() => {\n                                      AcceptVendor (item.pkid);\n                                    }}\n                                    id=\"war-btn\"\n                                  >\n                                    <ThumbUpAltSharpIcon />\n                                    {item.status}\n                                  </CButton>\n                                </CCol>\n                                <CCol md=\"4\">\n                                  <CButton\n                                    size=\"sm\"\n                                    onClick={() => {\n                                      RejectVendor (item.pkid);\n                                    }}\n                                    id=\"war-btn1\"\n                                  >\n                                    <DeleteSharpIcon />\n                                    {item.status}\n                                  </CButton>\n                                </CCol>\n                              </CRow>\n                            </td>\n                          ),\n                          'Merchant Type': item => <td>{item.merchantType}</td>,\n                          'Sl No.': item => <td>{item.id}</td>,\n                          Name: item => <td>{item.Shop}</td>,\n                          Email: item => <td>{item.Email}</td>,\n                          Mobile: item => <td>{item.Phone}</td>,\n                          'Owner Name': item => <td>{item.ownerName}</td>,\n                          Address: item => <td>{item.shopAdress}</td>,\n                          'Reg Date': item => <td>{item.regDate}</td>,\n                        }}\n                      />\n                    </CCardBody>\n                  </CCard>\n                </CCol>\n              </CRow>\n            </CCardBody>\n          </CCard>\n        </CCol>\n        <CCol sm=\"12\" md=\"6\">\n          <CCard>\n            <CCardBody>\n              <CRow>\n                <CCol>\n                  <CCard>\n                    <CCardHeader>New Rider Request</CCardHeader>\n                    <CCardBody>\n                      <CDataTable\n                        items={responseData3}\n                        fields={fields4}\n                        hover\n                        striped\n                        bordered\n                        sorter\n                        tableFilter={table}\n                        itemsPerPageSelect={items}\n                        size=\"sm\"\n                        itemsPerPage={4}\n                        pagination\n                        scopedSlots={{\n                          Action: item => (\n                            <td>\n                              <CRow>\n                                <CCol md=\"6\">\n                                  <CButton\n                                    size=\"sm\"\n                                    onClick={() => {\n                                      AcceptRider (item.pkid);\n                                    }}\n                                    id=\"war-btn\"\n                                  >\n                                    <ThumbUpAltSharpIcon />\n                                    {item.status}\n                                  </CButton>\n                                </CCol>\n                                <CCol md=\"4\">\n                                  <CButton\n                                    size=\"sm\"\n                                    onClick={() => {\n                                      RejectRider (item.pkid);\n                                    }}\n                                    id=\"war-btn1\"\n                                  >\n                                    <DeleteSharpIcon />\n                                    {item.status}\n                                  </CButton>\n                                </CCol>\n                              </CRow>\n                            </td>\n                          ),\n                          'Sl No.': item => <td>{item.id}</td>,\n                          Name: item => <td>{item.Rider}</td>,\n                          Email: item => <td>{item.Email}</td>,\n                          Mobile: item => <td>{item.Phone}</td>,\n                          'DL No.': item => <td>{item.DLNo}</td>,\n                          'Reg Date': item => <td>{item.regDate}</td>,\n                        }}\n                      />\n                    </CCardBody>\n                  </CCard>\n                </CCol>\n              </CRow>\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"sourceRoot":""}