{"version":3,"sources":["services/service.js","views/coupons/PreviousCoupons.js"],"names":["TAABEDAR_SERVICE","fields","key","table","placeholder","label","Rows","PreviousCoupons","useState","responseData","setResponseData","fetchData","React","useCallback","axios","method","url","headers","params","language_code","then","response","data","console","log","catch","error","useEffect","md","id","items","striped","itemsPerPage","pagination","sorter","tableFilter","itemsPerPageSelect","scopedSlots","Status","item","style","color","fontWeight","Status1","Image","urlEndpoint","path","width","height"],"mappings":"8JAGeA,IAFb,sE,mICwBIC,EAAS,CACb,CAAEC,IAAK,UACP,CAAEA,IAAK,QACP,CAAEA,IAAK,YACP,CAAEA,IAAK,QACP,CAAEA,IAAK,SACP,CAAEA,IAAK,YACP,CAAEA,IAAK,SACP,CAAEA,IAAK,QACP,CAAEA,IAAK,QACP,CAAEA,IAAK,YACP,CAAEA,IAAK,UACP,CAAEA,IAAK,aACP,CAAEA,IAAK,YACP,CAAEA,IAAK,gBAGHC,EAAQ,CAAEC,YAAa,iBAAkBC,MAAO,UAChDC,EAAO,CAAED,MAAO,QA0FPE,UApFS,WACtB,MAAwCC,mBAAS,IAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAYC,IAAMC,aAAY,WAClCC,IAAM,CACJC,OAAQ,MACRC,IAAKhB,IAAmB,mBACxBiB,QAAS,CACP,eAAgB,oBAElBC,OAAQ,CACNC,cAAe,QAGhBC,MAAK,SAACC,GACLX,EAAgBW,EAASC,MACzBC,QAAQC,IAAIH,EAASC,SAGtBG,OAAM,SAACC,GACNH,QAAQC,IAAIE,QAEf,IAKH,OAHAd,IAAMe,WAAU,WACdhB,MACC,IAED,gCACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAMiB,GAAG,MACT,cAAC,IAAD,CAAMA,GAAG,IAAT,SACE,oBAAIC,GAAG,WAAP,gCAEF,cAAC,IAAD,CAAMD,GAAG,SAEX,cAAC,IAAD,UACE,cAAC,IAAD,CAAMA,GAAG,KAAT,SACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,8BACA,cAAC,IAAD,UACE,cAAC,IAAD,CACEE,MAAOrB,EACPR,OAAQA,EACR8B,SAAO,EACPC,aAAc,EACdC,YAAU,EACVC,QAAM,EACNC,YAAahC,EACbiC,mBAAoB9B,EACpB+B,YAAa,CACXC,OAAQ,SAACC,GAAD,OACN,oBAAIC,MAAO,CAAEC,MAAO,MAAOC,WAAY,OAAvC,SACGH,EAAKI,WAIVC,MAAO,SAACL,GAAD,OACL,6BACE,cAAC,UAAD,CACEM,YAlEZ,sCAmEYC,KAAMP,EAAKK,MACXG,MAAM,OACNC,OAAO","file":"static/js/101.3aee35bc.chunk.js","sourcesContent":["const TAABEDAR_SERVICE =\r\n  'http://192.168.1.3:8086/Tabedar_Dashboard/resourses/projectservice';\r\n\r\nexport default TAABEDAR_SERVICE;\r\n","import React, { useState } from \"react\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteSharpIcon from \"@material-ui/icons/DeleteSharp\";\r\n\r\nimport PrintSharpIcon from \"@material-ui/icons/PrintSharp\";\r\n\r\nimport { IKContext, IKImage, IKUpload } from \"imagekitio-react\";\r\n\r\nimport axios from \"axios\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CDataTable,\r\n  CRow,\r\n  CButton,\r\n  CLink,\r\n} from \"@coreui/react\";\r\n\r\nimport \"../../style.css\";\r\nimport TAABEDAR_SERVICE from \"src/services/service\";\r\nimport LockOpenSharpIcon from \"@material-ui/icons/LockOpenSharp\";\r\nimport NoEncryptionSharpIcon from \"@material-ui/icons/NoEncryptionSharp\";\r\n\r\nconst fields = [\r\n  { key: \"Status\" },\r\n  { key: \"Name\" },\r\n  { key: \"Category\" },\r\n  { key: \"Code\" },\r\n  { key: \"Title\" },\r\n  { key: \"SubTitle\" },\r\n  { key: \"Image\" },\r\n  { key: \"Area\" },\r\n  { key: \"City\" },\r\n  { key: \"FromDate\" },\r\n  { key: \"ToDate\" },\r\n  { key: \"UserLimit\" },\r\n  { key: \"Discount\" },\r\n  { key: \"Description\" },\r\n  //\r\n];\r\nconst table = { placeholder: \"Search here...\", label: \"Search\" };\r\nconst Rows = { label: \"Rows\" };\r\n\r\nconst publicKey = \"public_Q88FTm6/mKTXhbicC8rJNyROsbU=\";\r\nconst urlEndpoint = \"https://ik.imagekit.io/h3rqsqucfge/\";\r\nconst authenticationEndpoint = \"http://localhost:3001/auth\";\r\n\r\nconst PreviousCoupons = () => {\r\n  const [responseData, setResponseData] = useState(\"\");\r\n  const fetchData = React.useCallback(() => {\r\n    axios({\r\n      method: \"GET\",\r\n      url: TAABEDAR_SERVICE + \"/PreviousCoupons\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n      params: {\r\n        language_code: \"en\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        setResponseData(response.data);\r\n        console.log(response.data);\r\n        // alert(response.data)\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <CRow>\r\n        <CCol md=\"3\"></CCol>\r\n        <CCol md=\"6\">\r\n          <h1 id=\"ccmaster\">Previous Coupons</h1>\r\n        </CCol>\r\n        <CCol md=\"3\"></CCol>\r\n      </CRow>\r\n      <CRow>\r\n        <CCol md=\"12\">\r\n          <CCard>\r\n            <CCardBody>\r\n              <CRow>\r\n                <CCol>\r\n                  <CCard>\r\n                    <CCardHeader>Expired Coupons</CCardHeader>\r\n                    <CCardBody>\r\n                      <CDataTable\r\n                        items={responseData}\r\n                        fields={fields}\r\n                        striped\r\n                        itemsPerPage={5}\r\n                        pagination\r\n                        sorter\r\n                        tableFilter={table}\r\n                        itemsPerPageSelect={Rows}\r\n                        scopedSlots={{\r\n                          Status: (item) => (\r\n                            <td style={{ color: \"red\", fontWeight: \"900\" }}>\r\n                              {item.Status1}\r\n                            </td>\r\n                          ),\r\n\r\n                          Image: (item) => (\r\n                            <td>\r\n                              <IKImage\r\n                                urlEndpoint={urlEndpoint}\r\n                                path={item.Image}\r\n                                width=\"50px\"\r\n                                height=\"50px\"\r\n                              />\r\n                            </td>\r\n                          ),\r\n                        }}\r\n                      />\r\n                    </CCardBody>\r\n                  </CCard>\r\n                </CCol>\r\n              </CRow>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PreviousCoupons;\r\n"],"sourceRoot":""}