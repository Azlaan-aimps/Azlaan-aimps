{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/@material-ui/icons/DeleteSharp.js","../node_modules/@material-ui/icons/Edit.js","views/masters/Location_Master.js"],"names":["_arrayLikeToArray","arr","len","length","i","arr2","Array","_slicedToArray","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","err","o","minLen","n","prototype","toString","call","slice","constructor","name","from","test","TypeError","_interopRequireDefault","require","_interopRequireWildcard","defineProperty","exports","default","React","_default","createElement","d","table","placeholder","label","items","values","fields","key","fields1","fields2","fields3","Country_Master","useState","countryPkid","setCountryPkid","AddButton","setAddButton","UpdateButton","setUpdateButton","country","setCountry","AddCountry","alert","obj","axios","post","then","response","data","fetchData","UpdateCountry","pkid","responseData","setResponseData","useCallback","method","url","headers","params","language_code","console","log","catch","error","useEffect","Updatebtn","type","onClick","size","id","Addbtn","xs","sm","md","lg","xl","className","action","encType","row","onChange","event","target","hover","striped","bordered","tableFilter","itemsPerPageSelect","sorter","itemsPerPage","pagination","scopedSlots","Action","item","EditContry","Country","status","City_Master","CountryData","setCountryData","StateData","setStateData","State","setState","City","setCity","CityPkid","setCitypkid","CityData","setCityData","GetCountry","GetCities","CountryOption","map","GetState","Countrypkid","StateOption","Province","GetStateForUpdate","stateid","AddCity","state","city","UpdateCity","custom","col","columnFilterSlot","countryid","Country_id","State_id","State_Master","StatePkid","setStatePkid","AddProvince","UpdateProvince","Area_Master","AreaPkid","setAreaPkid","AreaData","setAreaData","Area","setArea","GetArea","cityid","GetCityForUpdate","GetCity","statepkid","CityOption","sid","cid","AddArea","area","UpdateArea","City_id","Location_Master","myMaster","setMyMaster","countryBtn","setCountryBtn","provianceBtn","setProvianceBtn","cityBtn","setCityBtn","areaBtn","setAreaBtn","block","style","backgroundColor","borderColor","color","fontSize","fontWeight"],"mappings":"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","file":"static/js/41.2230ad93.chunk.js","sourcesContent":["export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 21h12V7H6v14zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'DeleteSharp');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 00-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\n\nexports.default = _default;","import React, {useState} from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CForm,\r\n  CFormGroup,\r\n  CInput,\r\n  CSelect,\r\n  CRow,\r\n  CDataTable,\r\n  CLabel,\r\n} from '@coreui/react';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteSharpIcon from '@material-ui/icons/DeleteSharp';\r\nimport '../../style.css';\r\nconst table = {placeholder: 'Search here...', label: 'Search:  '};\r\nconst items = {label: 'Rows:', values: [5, 10, 25, 50, 75, 100]};\r\nconst fields = [{key: 'Action'}, {key: 'Country'}];\r\nconst fields1 = [{key: 'Action'}, {key: 'Country'}, {key: 'Province'}];\r\nconst fields2 = [\r\n  {key: 'Action'},\r\n  {key: 'Country'},\r\n  {key: 'Province'},\r\n  {key: 'City'},\r\n];\r\nconst fields3 = [\r\n  {key: 'Action'},\r\n  {key: 'Country'},\r\n  {key: 'Province'},\r\n  {key: 'City'},\r\n  {key: 'Area'},\r\n];\r\n\r\nconst Location_Master = () => {\r\n  const [myMaster, setMyMaster] = useState ();\r\n  const [countryBtn, setCountryBtn] = useState (false);\r\n  const [provianceBtn, setProvianceBtn] = useState (false);\r\n  const [cityBtn, setCityBtn] = useState (false);\r\n  const [areaBtn, setAreaBtn] = useState (true);\r\n\r\n  const Stmt = () => {\r\n    if (myMaster === 'Country') {\r\n      return <Country_Master />;\r\n    } else if (myMaster === 'State') {\r\n      return <State_Master />;\r\n    } else if (myMaster === 'City') {\r\n      return <City_Master />;\r\n    } else if (myMaster === 'Area') {\r\n      return <Area_Master />;\r\n    } else {\r\n      return <Area_Master />;\r\n    }\r\n  };\r\n\r\n  const activeColors = () => {\r\n    return {\r\n      backgroundColor: '#ffd701',\r\n      borderColor: '#ffd701',\r\n      color: 'black',\r\n      fontSize: 14,\r\n      fontWeight: 700,\r\n    };\r\n  };\r\n\r\n  const defaultColors = () => {\r\n    return {\r\n      backgroundColor: '#3a2216',\r\n      borderColor: '#3a2216',\r\n      color: 'white',\r\n      fontSize: 14,\r\n      fontWeight: 500,\r\n    };\r\n  };\r\n\r\n  return (\r\n    <div id=\"Locroot\">\r\n      <CCard>\r\n        <CCardHeader id=\"ccheader\">Location Master</CCardHeader>\r\n        <CCardBody id=\"Loccard\">\r\n          <CRow className=\"align-items-center\">\r\n            <CCol md=\"3\" className=\"mb-3 mb-xl-0\">\r\n              <CButton\r\n                block\r\n                style={countryBtn === true ? activeColors () : defaultColors ()}\r\n                onClick={() => {\r\n                  setMyMaster ('Country');\r\n                  setCityBtn (false);\r\n                  setCountryBtn (true);\r\n                  setProvianceBtn (false);\r\n                  setAreaBtn (false);\r\n                }}\r\n              >\r\n                Country\r\n              </CButton>\r\n            </CCol>\r\n            <CCol md=\"3\" className=\"mb-3 mb-xl-0\">\r\n              <CButton\r\n                block\r\n                style={\r\n                  provianceBtn === true ? activeColors () : defaultColors ()\r\n                }\r\n                onClick={() => {\r\n                  setMyMaster ('State');\r\n                  setCityBtn (false);\r\n                  setCountryBtn (false);\r\n                  setProvianceBtn (true);\r\n                  setAreaBtn (false);\r\n                }}\r\n              >\r\n                Province\r\n              </CButton>\r\n            </CCol>\r\n            <CCol md=\"3\" className=\"mb-3 mb-xl-0\">\r\n              <CButton\r\n                block\r\n                style={cityBtn === true ? activeColors () : defaultColors ()}\r\n                onClick={() => {\r\n                  setMyMaster ('City');\r\n                  setCityBtn (true);\r\n                  setCountryBtn (false);\r\n                  setProvianceBtn (false);\r\n                  setAreaBtn (false);\r\n                }}\r\n              >\r\n                City\r\n              </CButton>\r\n            </CCol>\r\n            <CCol md=\"3\" className=\"mb-3 mb-xl-0\">\r\n              <CButton\r\n                block\r\n                style={areaBtn === true ? activeColors () : defaultColors ()}\r\n                onClick={() => {\r\n                  setMyMaster ('Area');\r\n                  setCityBtn (false);\r\n                  setCountryBtn (false);\r\n                  setProvianceBtn (false);\r\n                  setAreaBtn (true);\r\n                }}\r\n              >\r\n                Area\r\n              </CButton>\r\n            </CCol>\r\n          </CRow>\r\n        </CCardBody>\r\n      </CCard>\r\n      <div>{Stmt ()}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Country_Master = () => {\r\n  const [countryPkid, setCountryPkid] = useState ('');\r\n  const [AddButton, setAddButton] = useState (true);\r\n  const [UpdateButton, setUpdateButton] = useState (false);\r\n  const [countryCode, setCountryCode] = useState ('');\r\n\r\n  const countryCodeChange = event => {\r\n    setCountryCode (event.target.value);\r\n  };\r\n\r\n  const [country, setCountry] = useState ();\r\n\r\n  const countryChange = event => {\r\n    setCountry (event.target.value);\r\n  };\r\n\r\n  const AddCountry = () => {\r\n    if (country == '' || country == null) {\r\n      alert ('Please Enter Country Name');\r\n    } else {\r\n      const obj = {\r\n        country: country,\r\n      };\r\n\r\n      axios\r\n        .post (\r\n          'http://192.168.1.3:8086/Tabedar_Dashboard/resourses/projectservice/AddCountry',\r\n          obj\r\n        )\r\n        .then (response => {\r\n          if (response.data == '0') {\r\n            alert ('Country Already Exist');\r\n          } else if (response.data == '1') {\r\n            alert ('Country Added Successfully');\r\n            fetchData ();\r\n            setCountry ('');\r\n          } else if (response.data == '2') {\r\n            alert ('Failed To Add');\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  const UpdateCountry = () => {\r\n    if (country == '' || country == null) {\r\n      alert ('Please Enter Country Name');\r\n    } else {\r\n      const obj = {\r\n        country: country,\r\n        pkid: countryPkid,\r\n      };\r\n      axios\r\n        .post (\r\n          'http://192.168.1.3:8086/Tabedar_Dashboard/resourses/projectservice/UpdateCountry',\r\n          obj\r\n        )\r\n        .then (response => {\r\n          if (response.data == '0') {\r\n            alert ('Country Already Exist');\r\n          } else if (response.data == '1') {\r\n            alert ('Country Details Updated');\r\n            fetchData ();\r\n            setCountryPkid ('');\r\n            setCountry ('');\r\n            setAddButton (true);\r\n            setUpdateButton (false);\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  const EditContry = (id, country) => {\r\n    setCountryPkid (id);\r\n    setCountry (country);\r\n    setAddButton (false);\r\n    setUpdateButton (true);\r\n  };\r\n\r\n  const DeleteCountry = id => {\r\n    axios ({\r\n      method: 'GET',\r\n      url: 'http://192.168.1.3:8086/Tabedar_Dashboard/resourses/projectservice/DeleteCountry/' +\r\n        id +\r\n        '',\r\n      headers: {\r\n        'content-type': 'application/json',\r\n      },\r\n      params: {\r\n        language_code: 'en',\r\n      },\r\n    })\r\n      .then (response => {\r\n        if (response.data == true) {\r\n          alert ('Selected Country Deleted');\r\n          fetchData ();\r\n        } else {\r\n          alert ('Failed To Delete Country');\r\n        }\r\n      })\r\n      .catch (error => {\r\n        console.log (error);\r\n      });\r\n  };\r\n\r\n  let [responseData, setResponseData] = React.useState ('');\r\n\r\n  const fetchData = React.useCallback (() => {\r\n    axios ({\r\n      method: 'GET',\r\n      url: 'http://192.168.1.3:8086/Tabedar_Dashboard/resourses/projectservice/GetCountry',\r\n      headers: {\r\n        'content-type': 'application/json',\r\n      },\r\n      params: {\r\n        language_code: 'en',\r\n      },\r\n    })\r\n      .then (response => {\r\n        setResponseData (response.data);\r\n        console.log (response.data);\r\n      })\r\n      .catch (error => {\r\n        console.log (error);\r\n      });\r\n  }, []);\r\n\r\n  React.useEffect (() => {\r\n    fetchData ();\r\n  }, []);\r\n\r\n  const Updatebtn = () => (\r\n    <CButton type=\"button\" onClick={UpdateCountry} size=\"md\" id=\"Add-btn\">\r\n      Update\r\n    </CButton>\r\n  );\r\n\r\n  const Addbtn = () => (\r\n    <CButton type=\"button\" onClick={AddCountry} size=\"md\" id=\"Add-btn\">\r\n      Add\r\n    </CButton>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <h1 id=\"ccmaster\">Country Master</h1>\r\n      <CRow>\r\n        <CCol xs=\"12\" sm=\"12\" md=\"4\" lg=\"4\" xl=\"4\" className=\"mb-3 mb-xl-0\">\r\n          <div id=\"country-master\">\r\n            <CCard>\r\n              <CCardBody>\r\n                <CRow>\r\n                  <CCol>\r\n                    <CCard>\r\n                      <CCardHeader>Add Country</CCardHeader>\r\n                      <CCardBody>\r\n                        <CForm\r\n                          action=\"\"\r\n                          method=\"post\"\r\n                          encType=\"multipart/form-data\"\r\n                          className=\"form-horizontal\"\r\n                        >\r\n                          {/* <CFormGroup row>\r\n                            <CCol xs=\"12\" md=\"12\">\r\n                              <CLabel>Country-Code</CLabel>\r\n                              <CInput\r\n                                id=\"text-input1\"\r\n                                name=\"text-input\"\r\n                                placeholder=\"Code\"\r\n                                type=\"numeric\"\r\n                                onChange={countryCodeChange}\r\n                              />\r\n                            </CCol>\r\n                          </CFormGroup> */}\r\n\r\n                          <CFormGroup row>\r\n                            <CCol xs=\"12\" md=\"12\">\r\n                              <CLabel>Country</CLabel>\r\n                              <CInput\r\n                                id=\"text-input\"\r\n                                name=\"text-input\"\r\n                                placeholder=\"Country\"\r\n                                value={country}\r\n                                onChange={countryChange}\r\n                              />\r\n                            </CCol>\r\n                          </CFormGroup>\r\n                          {UpdateButton && <Updatebtn />}\r\n                          {AddButton && <Addbtn />}\r\n                        </CForm>\r\n                      </CCardBody>\r\n                    </CCard>\r\n                  </CCol>\r\n                </CRow>\r\n              </CCardBody>\r\n            </CCard>\r\n          </div>\r\n        </CCol>\r\n\r\n        <CCol xs=\"12\" sm=\"12\" md=\"8\" lg=\"8\" xl=\"8\" className=\"mb-3 mb-xl-0\">\r\n          <div id=\"country-table\">\r\n            <CCard id=\"Loccard\">\r\n              <CCardBody>\r\n                <CRow>\r\n                  <CCol>\r\n                    <CCard>\r\n                      <CCardHeader>Added Country</CCardHeader>\r\n                      <CCardBody>\r\n                        <CDataTable\r\n                          items={responseData}\r\n                          fields={fields}\r\n                          hover\r\n                          striped\r\n                          bordered\r\n                          tableFilter={table}\r\n                          itemsPerPageSelect={items}\r\n                          sorter\r\n                          size=\"sm\"\r\n                          itemsPerPage={4}\r\n                          pagination\r\n                          scopedSlots={{\r\n                            Action: item => (\r\n                              <td>\r\n                                <CButton\r\n                                  onClick={() => {\r\n                                    EditContry (item.pkid, item.Country);\r\n                                  }}\r\n                                  size=\"sm\"\r\n                                  id=\"war-btn\"\r\n                                >\r\n                                  <EditIcon />\r\n                                  {item.status}\r\n                                </CButton>\r\n                                <CButton\r\n                                  size=\"sm\"\r\n                                  onClick={() => {\r\n                                    DeleteCountry (item.pkid);\r\n                                  }}\r\n                                  size=\"sm\"\r\n                                  id=\"war-btn\"\r\n                                  id=\"war-btn1\"\r\n                                >\r\n                                  <DeleteSharpIcon />\r\n                                  {item.status}\r\n                                </CButton>\r\n                              </td>\r\n                            ),\r\n                          }}\r\n                        />\r\n                      </CCardBody>\r\n                    </CCard>\r\n                  </CCol>\r\n                </CRow>\r\n              </CCardBody>\r\n            </CCard>\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst City_Master = () => {\r\n  const [AddButton, setAddButton] = useState (true);\r\n  const [UpdateButton, setUpdateButton] = useState (false);\r\n  const [CountryData, setCountryData] = useState ();\r\n  const [StateData, setStateData] = useState ();\r\n  const [Country, setCountry] = useState ();\r\n  const [State, setState] = useState ();\r\n  const [City, setCity] = useState ();\r\n  const [CityPkid, setCitypkid] = useState ();\r\n  const [CityData, setCityData] = useState ();\r\n\r\n  React.useEffect (() => {\r\n    GetCountry ();\r\n    GetCities ();\r\n  }, []);\r\n\r\n  const GetCountry = React.useCallback (() => {\r\n    axios ({\r\n      method: 'GET',\r\n      url: 'http://192.168.1.3:8086/Tabedar_Dashboard/resourses/projectservice/GetCountry',\r\n      headers: {\r\n        'content-type': 'application/json',\r\n      },\r\n      params: {\r\n        language_code: 'en',\r\n      },\r\n    })\r\n      .then (response => {\r\n        const CountryOption = response.data.map (item => (\r\n          <option value={item.pkid}>{item.Country}</option>\r\n        ));\r\n        setCountryData (CountryOption);\r\n      })\r\n      .catch (error => {\r\n        console.log (error);\r\n      });\r\n  }, []);\r\n\r\n  const GetState = React.useCallback (Countrypkid => {\r\n    axios ({\r\n      method: 'GET',\r\n      url: 'http://192.168.1.3:8086/Tabedar_Dashboard/resourses/projectservice/GetStateByCountry/' +\r\n        Countrypkid +\r\n        '',\r\n      headers: {\r\n        'content-type': 'application/json',\r\n      },\r\n    })\r\n      .then (response => {\r\n        const StateOption = response.data.map (item => (\r\n          <option value={item.pkid}>{item.Province}</option>\r\n        ));\r\n        setStateData (StateOption);\r\n      })\r\n      .catch (error => {\r\n        console.log (error);\r\n      });\r\n  }, []);\r\n\r\n  const GetStateForUpdate = React.useCallback ((Countrypkid, stateid) => {\r\n    axios ({\r\n      method: 'GET',\r\n      url: 'http://192.168.1.3:8086/Tabedar_Dashboard/resourses/projectservice/GetStateByCountry/' +\r\n        Countrypkid +\r\n        '',\r\n      headers: {\r\n        'content-type': 'application/json',\r\n      },\r\n      params: {\r\n        language_code: 'en',\r\n      },\r\n    })\r\n      .then (response => {\r\n        const StateOption = response.data.map (item => (\r\n          <option value={item.pkid}>{item.Province}</option>\r\n        ));\r\n        setStateData (StateOption);\r\n        setState (stateid);\r\n      })\r\n      .catch (error => {\r\n        console.log (error);\r\n      });\r\n  }, []);\r\n\r\n  const CountryChange = event => {\r\n    setCountry (event.target.value);\r\n    GetState (event.target.value);\r\n  };\r\n\r\n  const StateCahange = event => {\r\n    setState (event.target.value);\r\n  };\r\n\r\n  const CityChange = event => {\r\n    setCity (event.target.value);\r\n  };\r\n\r\n  const AddCity = () => {\r\n    if (Country == '-1' || Country == null) {\r\n      alert ('Please Select Country');\r\n    } else if (State == '-1' || State == null) {\r\n      alert ('Please Select Province');\r\n    } else if (City == '' || City == null) {\r\n      alert ('Please Enter City Name');\r\n    } else {\r\n      const obj = {\r\n        country: Country,\r\n        state: State,\r\n        city: City,\r\n      };\r\n\r\n      axios\r\n        .post (\r\n          'http://192.168.1.3:8086/Tabedar_Dashboard/resourses/projectservice/AddCity',\r\n          obj\r\n        )\r\n        .then (response => {\r\n          if (response.data == '0') {\r\n            alert ('City Already Exist');\r\n          } else if (response.data == '1') {\r\n            alert ('City Added');\r\n            GetCountry ();\r\n            setCountry ('-1');\r\n            setState ('-1');\r\n            setCity ('');\r\n            GetCities ();\r\n          } else if (response.data == '2') {\r\n            alert ('Failed To Add');\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  const EditCity = (id, countryid, stateid, city) => {\r\n    setCitypkid (id);\r\n    setCountry (countryid);\r\n    GetStateForUpdate (countryid, stateid);\r\n    setCity (city);\r\n    setAddButton (false);\r\n    setUpdateButton (true);\r\n  };\r\n\r\n  const UpdateCity = () => {\r\n    if (Country == '' || Country == null) {\r\n      alert ('Please Select Country');\r\n    } else if (State == '-1') {\r\n      alert ('Please Select Province');\r\n    } else if (City == '' || City == null) {\r\n      alert ('Please Enter City Name');\r\n    } else {\r\n      const obj = {\r\n        country: Country,\r\n        state: State,\r\n        city: City,\r\n        pkid: CityPkid,\r\n      };\r\n\r\n      axios\r\n        .post (\r\n          'http://192.168.1.3:8086/Tabedar_Dashboard/resourses/projectservice/UpdateCity',\r\n          obj\r\n        )\r\n        .then (response => {\r\n          if (response.data == '0') {\r\n            alert ('Country Already Exist');\r\n          } else if (response.data == '1') {\r\n            alert ('Country Details Updated');\r\n            GetCities ();\r\n            GetCountry ();\r\n            setCountry ('-1');\r\n            setState ('-1');\r\n            setCity ('');\r\n            setAddButton (true);\r\n            setUpdateButton (false);\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  const DeleteCity = id => {\r\n    axios ({\r\n      method: 'GET',\r\n      url: 'http://192.168.1.3:8086/Tabedar_Dashboard/resourses/projectservice/DeleteCity/' +\r\n        id +\r\n        '',\r\n      headers: {\r\n        'content-type': 'application/json',\r\n      },\r\n    })\r\n      .then (response => {\r\n        if (response.data == true) {\r\n          alert ('Selected City Deleted');\r\n          GetCities ();\r\n          GetCountry ();\r\n          setCountry ('-1');\r\n          setState ('-1');\r\n          setCity ('');\r\n        } else {\r\n          alert ('Failed To Delete City');\r\n        }\r\n      })\r\n      .catch (error => {\r\n        console.log (error);\r\n      });\r\n  };\r\n\r\n  const GetCities = React.useCallback (() => {\r\n    axios ({\r\n      method: 'GET',\r\n      url: 'http://192.168.1.3:8086/Tabedar_Dashboard/resourses/projectservice/GetCity',\r\n      headers: {\r\n        'content-type': 'application/json',\r\n      },\r\n    })\r\n      .then (response => {\r\n        setCityData (response.data);\r\n      })\r\n      .catch (error => {\r\n        console.log (error);\r\n      });\r\n  }, []);\r\n\r\n  const Updatebtn = () => (\r\n    <CButton type=\"button\" onClick={UpdateCity} size=\"md\" id=\"Add-btn\">\r\n      Update\r\n    </CButton>\r\n  );\r\n\r\n  const Addbtn = () => (\r\n    <CButton type=\"button\" onClick={AddCity} size=\"md\" id=\"Add-btn\">\r\n      Add\r\n    </CButton>\r\n  );\r\n\r\n  return (\r\n    <div id=\"city\">\r\n      <h1 id=\"ccmaster\">City Master</h1>\r\n      <CRow>\r\n        <CCol sm=\"12\" md=\"12\" lg=\"4\" xl=\"4\" className=\"mb-3 mb-xl-0\">\r\n          <CCard id=\"city-master\">\r\n            <CCardBody>\r\n              <CRow>\r\n                <CCol>\r\n                  <CCard>\r\n                    <CCardHeader>Add City</CCardHeader>\r\n                    <CCardBody>\r\n                      <CForm\r\n                        action=\"\"\r\n                        method=\"post\"\r\n                        encType=\"multipart/form-data\"\r\n                        className=\"form-horizontal\"\r\n                      >\r\n                        <CFormGroup row>\r\n                          <CCol xs=\"12\" md=\"12\">\r\n                            <CLabel>Select Country</CLabel>\r\n                            <CSelect\r\n                              custom\r\n                              name=\"Country\"\r\n                              value={Country}\r\n                              onChange={CountryChange}\r\n                              id=\"Country\"\r\n                            >\r\n                              <option value=\"-1\">Select Country</option>\r\n                              {CountryData}\r\n                            </CSelect>\r\n                          </CCol>\r\n                        </CFormGroup>\r\n                        <CFormGroup row>\r\n                          <CCol xs=\"12\" md=\"12\">\r\n                            <CLabel>Select Province</CLabel>\r\n                            <CSelect\r\n                              custom\r\n                              name=\"Province\"\r\n                              value={State}\r\n                              onChange={StateCahange}\r\n                              id=\"Province\"\r\n                            >\r\n                              <option value=\"-1\">Select Province</option>\r\n                              {StateData}\r\n                            </CSelect>\r\n                          </CCol>\r\n                        </CFormGroup>\r\n                        <CFormGroup row>\r\n                          <CCol xs=\"12\" md=\"12\">\r\n                            <CLabel> City</CLabel>\r\n                            <CInput\r\n                              id=\"text-input1\"\r\n                              name=\"text-input\"\r\n                              value={City}\r\n                              onChange={CityChange}\r\n                              placeholder=\"City\"\r\n                            />\r\n                          </CCol>\r\n                        </CFormGroup>\r\n                        {UpdateButton && <Updatebtn />}\r\n                        {AddButton && <Addbtn />}\r\n                      </CForm>\r\n                    </CCardBody>\r\n                  </CCard>\r\n                </CCol>\r\n              </CRow>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n        <CCol col=\"10\">\r\n          <CCard id=\"city-table\">\r\n            <CCardBody>\r\n              <CRow>\r\n                <CCol>\r\n                  <CCard>\r\n                    <CCardHeader>Added Cities</CCardHeader>\r\n                    <CCardBody>\r\n                      <CDataTable\r\n                        items={CityData}\r\n                        fields={fields2}\r\n                        hover\r\n                        striped\r\n                        bordered\r\n                        sorter\r\n                        tableFilter={table}\r\n                        itemsPerPageSelect={items}\r\n                        columnFilterSlot\r\n                        size=\"sm\"\r\n                        itemsPerPage={4}\r\n                        pagination\r\n                        scopedSlots={{\r\n                          Action: item => (\r\n                            <td>\r\n                              <CButton\r\n                                size=\"sm\"\r\n                                onClick={() => {\r\n                                  EditCity (\r\n                                    item.pkid,\r\n                                    item.Country_id,\r\n                                    item.State_id,\r\n                                    item.City\r\n                                  );\r\n                                }}\r\n                                id=\"war-btn\"\r\n                              >\r\n                                <EditIcon />\r\n                                {item.status}\r\n                              </CButton>\r\n                              <CButton\r\n                                size=\"sm\"\r\n                                onClick={() => {\r\n                                  DeleteCity (item.pkid);\r\n                                }}\r\n                                id=\"war-btn1\"\r\n                              >\r\n                                <DeleteSharpIcon />\r\n                                {item.status}\r\n                              </CButton>\r\n                            </td>\r\n                          ),\r\n                        }}\r\n                      />\r\n                    </CCardBody>\r\n                  </CCard>\r\n                </CCol>\r\n              </CRow>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst State_Master = () => {\r\n  const [StatePkid, setStatePkid] = useState ();\r\n  const [CountryData, setCountryData] = useState ();\r\n  const [StateData, setStateData] = useState ();\r\n  const [Country, setCountry] = useState ('-1');\r\n  const [State, setState] = useState ();\r\n  const [AddButton, setAddButton] = useState (true);\r\n  const [UpdateButton, setUpdateButton] = useState (false);\r\n\r\n  const CountryChange = event => {\r\n    setCountry (event.target.value);\r\n  };\r\n\r\n  const StateChange = event => {\r\n    setState (event.target.value);\r\n  };\r\n\r\n  const AddProvince = () => {\r\n    if (Country == '-1') {\r\n      alert ('Please Select Country');\r\n    } else if (State == '' || State == null) {\r\n      alert ('Please Enter Province Name');\r\n    } else {\r\n      const obj = {\r\n        country: Country,\r\n        state: State,\r\n      };\r\n      axios\r\n        .post (\r\n          'http://192.168.1.3:8086/Tabedar_Dashboard/resourses/projectservice/AddState',\r\n          obj\r\n        )\r\n        .then (response => {\r\n          if (response.data == '0') {\r\n            alert ('Province Already Exist');\r\n          } else if (response.data == '1') {\r\n            alert ('Province Added Successfully');\r\n            GetCountry ();\r\n            GetState ();\r\n            setState ('');\r\n            setCountry ('-1');\r\n          } else if (response.data == '2') {\r\n            alert ('Failed To Add');\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  const EditState = (id, countryid, state) => {\r\n    setStatePkid (id);\r\n    setCountry (countryid);\r\n    setState (state);\r\n    setAddButton (false);\r\n    setUpdateButton (true);\r\n  };\r\n\r\n  const UpdateProvince = () => {\r\n    if (Country == '-1') {\r\n      alert ('Please Select Country');\r\n    } else if (State == '' || State == null) {\r\n      alert ('Please Enter Province Name');\r\n    } else {\r\n      const obj = {\r\n        country: Country,\r\n        state: State,\r\n        pkid: StatePkid,\r\n      };\r\n      axios\r\n        .post (\r\n          'http://192.168.1.3:8086/Tabedar_Dashboard/resourses/projectservice/UpdateState',\r\n          obj\r\n        )\r\n        .then (response => {\r\n          if (response.data == '0') {\r\n            alert ('Country Already Exist');\r\n          } else if (response.data == '1') {\r\n            alert ('Country Details Updated');\r\n            GetCountry ();\r\n            GetState ();\r\n            setState ('');\r\n            setCountry ('-1');\r\n            setAddButton (true);\r\n            setUpdateButton (false);\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  const DeleteState = id => {\r\n    axios ({\r\n      method: 'GET',\r\n      url: 'http://192.168.1.3:8086/Tabedar_Dashboard/resourses/projectservice/DeleteState/' +\r\n        id +\r\n        '',\r\n      headers: {\r\n        'content-type': 'application/json',\r\n      },\r\n    })\r\n      .then (response => {\r\n        if (response.data == true) {\r\n          alert ('Selected Province Deleted');\r\n          GetState ();\r\n        } else {\r\n          alert ('Failed To Delete Province');\r\n        }\r\n      })\r\n      .catch (error => {\r\n        console.log (error);\r\n      });\r\n  };\r\n\r\n  const GetCountry = React.useCallback (() => {\r\n    axios ({\r\n      method: 'GET',\r\n      url: 'http://192.168.1.3:8086/Tabedar_Dashboard/resourses/projectservice/GetCountry',\r\n      headers: {\r\n        'content-type': 'application/json',\r\n      },\r\n    })\r\n      .then (response => {\r\n        const CountryOption = response.data.map (item => (\r\n          <option value={item.pkid}>{item.Country}</option>\r\n        ));\r\n        setCountryData (CountryOption);\r\n      })\r\n      .catch (error => {\r\n        console.log (error);\r\n      });\r\n  }, []);\r\n\r\n  const GetState = React.useCallback (() => {\r\n    axios ({\r\n      method: 'GET',\r\n      url: 'http://192.168.1.3:8086/Tabedar_Dashboard/resourses/projectservice/GetState',\r\n      headers: {\r\n        'content-type': 'application/json',\r\n      },\r\n    })\r\n      .then (response => {\r\n        setStateData (response.data);\r\n      })\r\n      .catch (error => {\r\n        console.log (error);\r\n      });\r\n  }, []);\r\n\r\n  React.useEffect (() => {\r\n    GetCountry ();\r\n    GetState ();\r\n  }, []);\r\n\r\n  const Updatebtn = () => (\r\n    <CButton type=\"button\" onClick={UpdateProvince} size=\"md\" id=\"Add-btn\">\r\n      Update\r\n    </CButton>\r\n  );\r\n\r\n  const Addbtn = () => (\r\n    <CButton type=\"button\" onClick={AddProvince} size=\"md\" id=\"Add-btn\">\r\n      Add\r\n    </CButton>\r\n  );\r\n\r\n  return (\r\n    <div id=\"state\">\r\n      <h1 id=\"ccmaster\">Province Master</h1>\r\n      <CRow>\r\n        <CCol sm=\"12\" md=\"12\" lg=\"4\" xl=\"4\" className=\"mb-3 mb-xl-0\">\r\n          <CCard>\r\n            <CCardBody>\r\n              <CRow>\r\n                <CCol>\r\n                  <CCard>\r\n                    <CCardHeader>Add Province</CCardHeader>\r\n                    <CCardBody>\r\n                      <CForm\r\n                        action=\"\"\r\n                        method=\"post\"\r\n                        encType=\"multipart/form-data\"\r\n                        className=\"form-horizontal\"\r\n                      >\r\n                        <CFormGroup row>\r\n                          <CCol xs=\"12\" md=\"12\">\r\n                            <CLabel>Select Country</CLabel>\r\n                            <CSelect\r\n                              custom\r\n                              name=\"Country\"\r\n                              onChange={CountryChange}\r\n                              value={Country}\r\n                              id=\"Country\"\r\n                            >\r\n                              <option value=\"-1\">Select Country</option>\r\n                              {CountryData}\r\n                            </CSelect>\r\n                          </CCol>\r\n                        </CFormGroup>\r\n                        <CFormGroup row>\r\n                          <CCol xs=\"12\" md=\"12\">\r\n                            <CLabel>Province</CLabel>\r\n                            <CInput\r\n                              id=\"text-input\"\r\n                              name=\"text-input\"\r\n                              placeholder=\"Province\"\r\n                              value={State}\r\n                              onChange={StateChange}\r\n                            />\r\n                          </CCol>\r\n                        </CFormGroup>\r\n                      </CForm>\r\n                      {UpdateButton && <Updatebtn />}\r\n                      {AddButton && <Addbtn />}\r\n                    </CCardBody>\r\n                  </CCard>\r\n                </CCol>\r\n              </CRow>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n\r\n        <CCol col=\"10\">\r\n          <CCard>\r\n            <CCardBody>\r\n              <CRow>\r\n                <CCol>\r\n                  <CCard>\r\n                    <CCardHeader>Added Province</CCardHeader>\r\n                    <CCardBody>\r\n                      <CDataTable\r\n                        items={StateData}\r\n                        fields={fields1}\r\n                        hover\r\n                        striped\r\n                        bordered\r\n                        sorter\r\n                        tableFilter={table}\r\n                        itemsPerPageSelect={items}\r\n                        size=\"sm\"\r\n                        itemsPerPage={4}\r\n                        pagination\r\n                        scopedSlots={{\r\n                          Action: item => (\r\n                            <td>\r\n                              <CButton\r\n                                size=\"sm\"\r\n                                onClick={() => {\r\n                                  EditState (\r\n                                    item.pkid,\r\n                                    item.Country_id,\r\n                                    item.Province\r\n                                  );\r\n                                }}\r\n                                id=\"war-btn\"\r\n                              >\r\n                                <EditIcon />\r\n                                {item.status}\r\n                              </CButton>\r\n                              <CButton\r\n                                size=\"sm\"\r\n                                onClick={() => {\r\n                                  DeleteState (item.pkid);\r\n                                }}\r\n                                id=\"war-btn1\"\r\n                              >\r\n                                <DeleteSharpIcon />\r\n                                {item.status}\r\n                              </CButton>\r\n                            </td>\r\n                          ),\r\n                        }}\r\n                      />\r\n                    </CCardBody>\r\n                  </CCard>\r\n                </CCol>\r\n              </CRow>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Area_Master = () => {\r\n  const [textInput3, setTextInput3] = React.useState ('');\r\n\r\n  const [AreaPkid, setAreaPkid] = useState ();\r\n  const [CountryData, setCountryData] = useState ();\r\n  const [StateData, setStateData] = useState ();\r\n  const [CityData, setCityData] = useState ();\r\n  const [AreaData, setAreaData] = useState ();\r\n  const [Country, setCountry] = useState ('-1');\r\n  const [State, setState] = useState ();\r\n  const [City, setCity] = useState ();\r\n  const [Area, setArea] = useState ();\r\n  const [AddButton, setAddButton] = useState (true);\r\n  const [UpdateButton, setUpdateButton] = useState (false);\r\n\r\n  React.useEffect (() => {\r\n    GetCountry ();\r\n    GetArea ();\r\n  }, []);\r\n\r\n  const GetArea = React.useCallback (() => {\r\n    axios ({\r\n      method: 'GET',\r\n      url: 'http://192.168.1.3:8086/Tabedar_Dashboard/resourses/projectservice/GetArea',\r\n      headers: {\r\n        'content-type': 'application/json',\r\n      },\r\n    })\r\n      .then (response => {\r\n        setAreaData (response.data);\r\n      })\r\n      .catch (error => {\r\n        console.log (error);\r\n      });\r\n  }, []);\r\n\r\n  const GetCountry = React.useCallback (() => {\r\n    axios ({\r\n      method: 'GET',\r\n      url: 'http://192.168.1.3:8086/Tabedar_Dashboard/resourses/projectservice/GetCountry',\r\n      headers: {\r\n        'content-type': 'application/json',\r\n      },\r\n    })\r\n      .then (response => {\r\n        const CountryOption = response.data.map (item => (\r\n          <option value={item.pkid}>{item.Country}</option>\r\n        ));\r\n        setCountryData (CountryOption);\r\n      })\r\n      .catch (error => {\r\n        console.log (error);\r\n      });\r\n  }, []);\r\n\r\n  const GetState = React.useCallback (Countrypkid => {\r\n    axios ({\r\n      method: 'GET',\r\n      url: 'http://192.168.1.3:8086/Tabedar_Dashboard/resourses/projectservice/GetStateByCountry/' +\r\n        Countrypkid +\r\n        '',\r\n      headers: {\r\n        'content-type': 'application/json',\r\n      },\r\n    })\r\n      .then (response => {\r\n        const StateOption = response.data.map (item => (\r\n          <option value={item.pkid}>{item.Province}</option>\r\n        ));\r\n        setStateData (StateOption);\r\n      })\r\n      .catch (error => {\r\n        console.log (error);\r\n      });\r\n  }, []);\r\n\r\n  const GetStateForUpdate = React.useCallback (\r\n    (Countrypkid, stateid, cityid) => {\r\n      axios ({\r\n        method: 'GET',\r\n        url: 'http://192.168.1.3:8086/Tabedar_Dashboard/resourses/projectservice/GetStateByCountry/' +\r\n          Countrypkid +\r\n          '',\r\n        headers: {\r\n          'content-type': 'application/json',\r\n        },\r\n      })\r\n        .then (response => {\r\n          const StateOption = response.data.map (item => (\r\n            <option value={item.pkid}>{item.Province}</option>\r\n          ));\r\n          setStateData (StateOption);\r\n          setState (stateid);\r\n          GetCityForUpdate (Countrypkid, stateid, cityid);\r\n        })\r\n        .catch (error => {\r\n          console.log (error);\r\n        });\r\n    },\r\n    []\r\n  );\r\n\r\n  const GetCity = React.useCallback ((Countrypkid, statepkid) => {\r\n    axios ({\r\n      method: 'GET',\r\n      url: 'http://192.168.1.3:8086/Tabedar_Dashboard/resourses/projectservice/GetCityByStateAndCountry/' +\r\n        Countrypkid +\r\n        '/' +\r\n        statepkid +\r\n        '',\r\n      headers: {\r\n        'content-type': 'application/json',\r\n      },\r\n    })\r\n      .then (response => {\r\n        const CityOption = response.data.map (item => (\r\n          <option value={item.pkid}>{item.City}</option>\r\n        ));\r\n        setCityData (CityOption);\r\n      })\r\n      .catch (error => {\r\n        console.log (error);\r\n      });\r\n  }, []);\r\n\r\n  const GetCityForUpdate = React.useCallback ((Countrypkid, sid, cid) => {\r\n    axios ({\r\n      method: 'GET',\r\n      url: 'http://192.168.1.3:8086/Tabedar_Dashboard/resourses/projectservice/GetCityByStateAndCountry/' +\r\n        Countrypkid +\r\n        '/' +\r\n        sid +\r\n        '',\r\n      headers: {\r\n        'content-type': 'application/json',\r\n      },\r\n    })\r\n      .then (response => {\r\n        const CityOption = response.data.map (item => (\r\n          <option value={item.pkid}>{item.City}</option>\r\n        ));\r\n        setCityData (CityOption);\r\n        setCity (cid);\r\n      })\r\n      .catch (error => {\r\n        console.log (error);\r\n      });\r\n  }, []);\r\n\r\n  const AddArea = () => {\r\n    if (Country == '-1' || Country == null) {\r\n      alert ('Please Select Country');\r\n    } else if (State == '-1' || State == null) {\r\n      alert ('Please Select Province');\r\n    } else if (City == '-1' || City == null) {\r\n      alert ('Please Select City');\r\n    } else if (Area == '' || Area == null) {\r\n      alert ('Please Enter Area Name');\r\n    } else {\r\n      const obj = {\r\n        country: Country,\r\n        state: State,\r\n        city: City,\r\n        area: Area,\r\n      };\r\n\r\n      axios\r\n        .post (\r\n          'http://192.168.1.3:8086/Tabedar_Dashboard/resourses/projectservice/AddArea',\r\n          obj\r\n        )\r\n        .then (response => {\r\n          if (response.data == '0') {\r\n            alert ('Area Already Exist');\r\n          } else if (response.data == '1') {\r\n            alert ('Area Added');\r\n            GetArea ();\r\n            GetCountry ();\r\n            setCountry ('-1');\r\n            setState ('-1');\r\n            setCity ('-1');\r\n            setArea ('');\r\n          } else if (response.data == '2') {\r\n            alert ('Failed To Add');\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  const EditArea = (id, countryid, stateid, cityid, area) => {\r\n    setAreaPkid (id);\r\n    setCountry (countryid);\r\n    GetStateForUpdate (countryid, stateid, cityid);\r\n    setArea (area);\r\n    setAddButton (false);\r\n    setUpdateButton (true);\r\n  };\r\n\r\n  const UpdateArea = () => {\r\n    if (Country == '-1') {\r\n      alert ('Please Select Country');\r\n    } else if (State == '-1') {\r\n      alert ('Please Select Province');\r\n    } else if (City == '-1') {\r\n      alert ('Please Select City');\r\n    } else if (Area == '' || Area == null) {\r\n      alert ('Please Enter Area Name');\r\n    } else {\r\n      const obj = {\r\n        country: Country,\r\n        state: State,\r\n        city: City,\r\n        area: Area,\r\n        pkid: AreaPkid,\r\n      };\r\n\r\n      axios\r\n        .post (\r\n          'http://192.168.1.3:8086/Tabedar_Dashboard/resourses/projectservice/UpdateArea',\r\n          obj\r\n        )\r\n        .then (response => {\r\n          if (response.data == '0') {\r\n            alert ('Area Already Exist');\r\n          } else if (response.data == '1') {\r\n            alert ('Area Details Updated');\r\n            GetArea ();\r\n            GetCountry ();\r\n            setCountry ('-1');\r\n            setState ('-1');\r\n            setCity ('-1');\r\n            setArea ('');\r\n            setAreaPkid ('');\r\n            setAddButton (true);\r\n            setUpdateButton (false);\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  const DeleteArea = id => {\r\n    axios ({\r\n      method: 'GET',\r\n      url: 'http://192.168.1.3:8086/Tabedar_Dashboard/resourses/projectservice/DeleteArea/' +\r\n        id +\r\n        '',\r\n      headers: {\r\n        'content-type': 'application/json',\r\n      },\r\n    })\r\n      .then (response => {\r\n        if (response.data == true) {\r\n          alert ('Selected Area Deleted');\r\n          GetArea ();\r\n          GetCountry ();\r\n          setCountry ('-1');\r\n          setState ('-1');\r\n          setCity ('-1');\r\n          setArea ('');\r\n          setAreaPkid ('');\r\n        } else {\r\n          alert ('Failed To Delete Area');\r\n        }\r\n      })\r\n      .catch (error => {\r\n        console.log (error);\r\n      });\r\n  };\r\n\r\n  const CountryChange = event => {\r\n    setCountry (event.target.value);\r\n    GetState (event.target.value);\r\n  };\r\n\r\n  const StateChange = event => {\r\n    setState (event.target.value);\r\n    GetCity (Country, event.target.value);\r\n  };\r\n\r\n  const CityChange = event => {\r\n    setCity (event.target.value);\r\n  };\r\n\r\n  const AreaChange = event => {\r\n    setArea (event.target.value);\r\n  };\r\n\r\n  const Updatebtn = () => (\r\n    <CButton type=\"button\" onClick={UpdateArea} size=\"md\" id=\"Add-btn\">\r\n      Update\r\n    </CButton>\r\n  );\r\n\r\n  const Addbtn = () => (\r\n    <CButton type=\"button\" onClick={AddArea} size=\"md\" id=\"Add-btn\">\r\n      Add\r\n    </CButton>\r\n  );\r\n\r\n  const handleClick3 = () => {\r\n    console.log (textInput3);\r\n  };\r\n\r\n  const handleChange3 = event => {\r\n    setTextInput3 (event.target.value);\r\n  };\r\n  return (\r\n    <div id=\"area\">\r\n      <h1 id=\"ccmaster\">Area Master</h1>\r\n      <CRow>\r\n        <CCol sm=\"12\" md=\"12\" lg=\"4\" xl=\"4\" className=\"mb-3 mb-xl-0\">\r\n          <CCard id=\"city-master\">\r\n            <CCardBody>\r\n              <CRow>\r\n                <CCol>\r\n                  <CCard>\r\n                    <CCardHeader>Add Area</CCardHeader>\r\n                    <CCardBody>\r\n                      <CForm\r\n                        action=\"\"\r\n                        method=\"post\"\r\n                        encType=\"multipart/form-data\"\r\n                        className=\"form-horizontal\"\r\n                      >\r\n                        <CFormGroup row>\r\n                          <CCol xs=\"12\" md=\"12\">\r\n                            <CLabel>Select Country</CLabel>\r\n                            <CSelect\r\n                              custom\r\n                              name=\"Country\"\r\n                              onChange={CountryChange}\r\n                              value={Country}\r\n                              id=\"Country\"\r\n                            >\r\n                              <option value=\"0\">Country</option>\r\n                              {CountryData}\r\n                            </CSelect>\r\n                          </CCol>\r\n                        </CFormGroup>\r\n                        <CFormGroup row>\r\n                          <CCol xs=\"12\" md=\"12\">\r\n                            <CLabel>Select Province</CLabel>\r\n                            <CSelect\r\n                              custom\r\n                              name=\"Province\"\r\n                              onChange={StateChange}\r\n                              value={State}\r\n                              id=\"Province\"\r\n                            >\r\n                              <option value=\"0\">Province</option>\r\n                              {StateData}\r\n                            </CSelect>\r\n                          </CCol>\r\n                        </CFormGroup>\r\n                        <CFormGroup row>\r\n                          <CCol xs=\"12\" md=\"12\">\r\n                            <CLabel>Select City</CLabel>\r\n                            <CSelect\r\n                              custom\r\n                              name=\"City\"\r\n                              onChange={CityChange}\r\n                              value={City}\r\n                              id=\"City\"\r\n                            >\r\n                              <option value=\"0\">City</option>\r\n                              {CityData}\r\n                            </CSelect>\r\n                          </CCol>\r\n                        </CFormGroup>\r\n                        <CFormGroup row>\r\n                          <CCol xs=\"12\" md=\"12\">\r\n                            <CLabel> Area</CLabel>\r\n                            <CInput\r\n                              id=\"text-input1\"\r\n                              name=\"text-input\"\r\n                              placeholder=\"Area\"\r\n                              onChange={AreaChange}\r\n                              value={Area}\r\n                            />\r\n                          </CCol>\r\n                        </CFormGroup>\r\n\r\n                        {UpdateButton && <Updatebtn />}\r\n                        {AddButton && <Addbtn />}\r\n                      </CForm>\r\n                    </CCardBody>\r\n                  </CCard>\r\n                </CCol>\r\n              </CRow>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n        <CCol col=\"10\">\r\n          <CCard id=\"city-table\">\r\n            <CCardBody>\r\n              <CRow>\r\n                <CCol>\r\n                  <CCard>\r\n                    <CCardHeader>Added Areas</CCardHeader>\r\n                    <CCardBody>\r\n                      <CDataTable\r\n                        items={AreaData}\r\n                        fields={fields3}\r\n                        hover\r\n                        striped\r\n                        bordered\r\n                        sorter\r\n                        tableFilter={table}\r\n                        itemsPerPageSelect={items}\r\n                        columnFilterSlot\r\n                        size=\"sm\"\r\n                        itemsPerPage={4}\r\n                        pagination\r\n                        scopedSlots={{\r\n                          Action: item => (\r\n                            <td>\r\n                              <CButton\r\n                                size=\"sm\"\r\n                                onClick={() => {\r\n                                  EditArea (\r\n                                    item.pkid,\r\n                                    item.Country_id,\r\n                                    item.State_id,\r\n                                    item.City_id,\r\n                                    item.Area\r\n                                  );\r\n                                }}\r\n                                id=\"war-btn\"\r\n                              >\r\n                                <EditIcon />\r\n                                {item.status}\r\n                              </CButton>\r\n                              <CButton\r\n                                size=\"sm\"\r\n                                onClick={() => {\r\n                                  DeleteArea (item.pkid);\r\n                                }}\r\n                                id=\"war-btn1\"\r\n                              >\r\n                                <DeleteSharpIcon />\r\n                                {item.status}\r\n                              </CButton>\r\n                            </td>\r\n                          ),\r\n                        }}\r\n                      />\r\n                    </CCardBody>\r\n                  </CCard>\r\n                </CCol>\r\n              </CRow>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Location_Master;\r\n"],"sourceRoot":""}