{"version":3,"sources":["services/service.js","views/user/AllUsers.js"],"names":["TAABEDAR_SERVICE","fields","key","table","placeholder","label","items","values","Users_mobileApp","useState","success","setSuccess","info","setInfo","Non","setNon","coupon","setCoupoun","block","setBlock","userPkid","SetUserPkid","Suggestion","SetSuggestion","Reason","SetReason","UserDate","setUserDate","history","useHistory","GetAllUsers","React","useCallback","axios","method","url","headers","then","response","data","catch","error","console","log","useEffect","id","col","hover","striped","bordered","sorter","tableFilter","itemsPerPage","pagination","size","itemsPerPageSelect","scopedSlots","Block","item","md","onClick","pkid","TotalOrders","push","totalOrder","Multiple_Orders","multipleOrder","Single_Orders","singlrOrder","Name","uname","Mobile","upho","negativeBalance","Payment","SLNo","CouponAvailed","couponAvailed","show","onClose","color","closeButton","src","class","alt","value","onChange","event","target","multiline","rows","variant","style","width","obj","post","alert"],"mappings":"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","file":"static/js/108.eb55aa14.chunk.js","sourcesContent":["const TAABEDAR_SERVICE =\r\n  'http://192.168.1.3:8086/Tabedar_Dashboard/resourses/projectservice';\r\n\r\nexport default TAABEDAR_SERVICE;\r\n","import React, {useState} from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCol,\r\n  CDataTable,\r\n  CRow,\r\n  CButton,\r\n  CModal,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CBadge,\r\n  CSelect,\r\n  CLabel,\r\n  CCardHeader,\r\n  CLink,\r\n} from '@coreui/react';\r\nimport '../../style.css';\r\nimport TAABEDAR_SERVICE from 'src/services/service';\r\nimport NoEncryptionSharpIcon from '@material-ui/icons/NoEncryptionSharp';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {useHistory} from 'react-router-dom';\r\nconst fields = [\r\n  {\r\n    key: 'Block',\r\n  },\r\n  {\r\n    key: 'SLNo',\r\n  },\r\n  {\r\n    key: 'Name',\r\n  },\r\n  {\r\n    key: 'Mobile',\r\n  },\r\n  {\r\n    key: 'TotalOrders',\r\n  },\r\n  {\r\n    key: 'Single_Orders',\r\n  },\r\n  {\r\n    key: 'Multiple_Orders',\r\n  },\r\n  {\r\n    key: 'Negative Balance',\r\n  },\r\n\r\n  {\r\n    key: 'CouponAvailed',\r\n  },\r\n  {\r\n    key: 'Payment',\r\n  },\r\n];\r\n\r\nconst table = {placeholder: 'Search here...', label: 'Search:  '};\r\nconst items = {label: 'Rows', values: [5, 10, 25, 50, 75, 100]};\r\n\r\nconst Users_mobileApp = () => {\r\n  const [success, setSuccess] = useState (false);\r\n  const [info, setInfo] = useState (false);\r\n  const [Non, setNon] = useState (false);\r\n  const [coupon, setCoupoun] = useState (false);\r\n  const [block, setBlock] = useState (false);\r\n\r\n  const [userPkid, SetUserPkid] = useState ('');\r\n  const [Suggestion, SetSuggestion] = useState ('');\r\n  const [Reason, SetReason] = useState ('');\r\n\r\n  const [UserDate, setUserDate] = useState (false);\r\n\r\n  let history = useHistory ();\r\n\r\n  const GetAllUsers = React.useCallback (() => {\r\n    axios ({\r\n      method: 'GET',\r\n      url: TAABEDAR_SERVICE + '/GetAllUsers',\r\n      headers: {\r\n        'content-type': 'application/json',\r\n      },\r\n    })\r\n      .then (response => {\r\n        setUserDate (response.data);\r\n      })\r\n      .catch (error => {\r\n        console.log (error);\r\n      });\r\n  }, []);\r\n\r\n  React.useEffect (() => {\r\n    GetAllUsers ();\r\n  }, []);\r\n\r\n  const getUserpkid = pkid => {\r\n    SetReason ('');\r\n    SetSuggestion ('Select Suggestion');\r\n    SetUserPkid (pkid);\r\n    setBlock (!block);\r\n  };\r\n\r\n  const SuggestionChange = event => {\r\n    SetSuggestion (event.target.value);\r\n  };\r\n  const ReasonChange = event => {\r\n    SetReason (event.target.value);\r\n  };\r\n\r\n  const GetBlocked = () => {\r\n    console.log ('Pkid :' + userPkid);\r\n    console.log ('Suggestion :' + Suggestion);\r\n    console.log ('Reason :' + Reason);\r\n\r\n    const obj = {\r\n      userPkid: userPkid,\r\n      Suggestion: Suggestion,\r\n      Reason: Reason,\r\n    };\r\n\r\n    axios.post (TAABEDAR_SERVICE + '/BloackUser', obj).then (response => {\r\n      if (response.data == true) {\r\n        alert ('User Blocked');\r\n        GetAllUsers ();\r\n      } else {\r\n        alert ('Failed To Block');\r\n      }\r\n    });\r\n\r\n    SetReason ('');\r\n    SetSuggestion ('Select Suggestion');\r\n    setBlock (!block);\r\n  };\r\n\r\n  // const redirect = () => {\r\n  //   history.push(\"/UserTotalOrders\");\r\n  // };\r\n  // const redirect1 = () => {\r\n  //   history.push(\"/TotalSales\");\r\n  // };\r\n  // const redirect2 = () => {\r\n  //   history.push(\"/UserPayment\");\r\n  // };\r\n  // const redirect3 = () => {\r\n  //   history.push(\"/UserProfile\");\r\n  // };\r\n  // const redirect4 = () => {\r\n  //   history.push(\"/CouponsAvailed\");\r\n  // };\r\n\r\n  return (\r\n    <div>\r\n      <h1 id=\"ccmaster\">Mobile App Users</h1>\r\n      <CRow>\r\n        <CCol col=\"10\">\r\n          <CCard>\r\n            <CCardBody>\r\n              <CRow>\r\n                <CCol>\r\n                  <CCard>\r\n                    <CCardHeader>App Users</CCardHeader>\r\n                    <CCardBody>\r\n                      <CDataTable\r\n                        items={UserDate}\r\n                        fields={fields}\r\n                        hover\r\n                        striped\r\n                        bordered\r\n                        sorter\r\n                        tableFilter={table}\r\n                        itemsPerPage={4}\r\n                        pagination\r\n                        size=\"sm\"\r\n                        itemsPerPageSelect={items}\r\n                        scopedSlots={{\r\n                          Block: item => (\r\n                            <td>\r\n                              <CRow>\r\n                                <CCol md=\"9\">\r\n                                  <CButton\r\n                                    size=\"sm\"\r\n                                    id=\"deactivate\"\r\n                                    onClick={() => {\r\n                                      getUserpkid (item.pkid);\r\n                                    }}\r\n                                  >\r\n                                    <NoEncryptionSharpIcon />\r\n                                  </CButton>\r\n                                </CCol>\r\n                              </CRow>\r\n                            </td>\r\n                          ),\r\n                          TotalOrders: item => (\r\n                            <td>\r\n                              <CButton\r\n                                id=\"order-list\"\r\n                                onClick={() => {\r\n                                  history.push ('/UserTotalOrders', {\r\n                                    data: item,\r\n                                  });\r\n                                }}\r\n                              >\r\n                                {item.totalOrder}\r\n                              </CButton>\r\n                            </td>\r\n                          ),\r\n                          Multiple_Orders: item => (\r\n                            <td>\r\n                              <CButton\r\n                                id=\"order-list\"\r\n                                onClick={() => {\r\n                                  history.push ('/UserMultipleOrders', {\r\n                                    data: item,\r\n                                  });\r\n                                }}\r\n                              >\r\n                                {item.multipleOrder}\r\n                              </CButton>\r\n                            </td>\r\n                          ),\r\n                          Single_Orders: item => (\r\n                            <td>\r\n                              <CButton\r\n                                id=\"order-list\"\r\n                                onClick={() => {\r\n                                  history.push ('/UserSingleOrders', {\r\n                                    data: item,\r\n                                  });\r\n                                }}\r\n                              >\r\n                                {item.singlrOrder}\r\n                              </CButton>\r\n                            </td>\r\n                          ),\r\n                          Name: item => <td>{item.uname}</td>,\r\n                          Mobile: item => <td>{item.upho}</td>,\r\n                          'Negative Balance': item => (\r\n                            <td>{item.negativeBalance}</td>\r\n                          ),\r\n                          Payment: item => (\r\n                            <td>\r\n                              <CButton\r\n                                onClick={() => {\r\n                                  history.push ('/UserPayment', {\r\n                                    data: item,\r\n                                  });\r\n                                }}\r\n                              >\r\n                                <b>View</b>\r\n                              </CButton>\r\n                            </td>\r\n                          ),\r\n                          SLNo: item => <td>{item.id}</td>,\r\n                          CouponAvailed: item => (\r\n                            <td>\r\n                              <CButton\r\n                                id=\"order-list\"\r\n                                onClick={() => {\r\n                                  history.push ('/CouponsAvailed', {\r\n                                    data: item,\r\n                                  });\r\n                                }}\r\n                              >\r\n                                {item.couponAvailed}\r\n                              </CButton>\r\n                            </td>\r\n                          ),\r\n                        }}\r\n                      />\r\n\r\n                      <CModal\r\n                        show={success}\r\n                        onClose={() => setSuccess (!success)}\r\n                        color=\"success\"\r\n                      >\r\n                        <CModalHeader closeButton>\r\n                          <CModalTitle>Order List</CModalTitle>\r\n                        </CModalHeader>\r\n                        <CModalBody>\r\n                          Order No : 0012<br />\r\n                          Order Item : Grocery Kit<br />\r\n                          Quantity : 2<br />\r\n                          Total Amount : 900<br />\r\n                          <hr />\r\n                          Order No : 0013<br />\r\n                          Order Item : Pizza<br />\r\n                          Quantity : 2<br />\r\n                          Total Amount : 900<br />\r\n                          <hr />\r\n                          Order No : 0014<br />\r\n                          Order Item : Tablets<br />\r\n                          Quantity : 2<br />\r\n                          Total Amount : 900<br />\r\n                        </CModalBody>\r\n                        <CModalFooter>\r\n                          <CButton\r\n                            color=\"success\"\r\n                            onClick={() => setSuccess (!success)}\r\n                          >\r\n                            Done\r\n                          </CButton>{' '}\r\n                          <CButton\r\n                            color=\"secondary\"\r\n                            onClick={() => setSuccess (!success)}\r\n                          >\r\n                            Cancel\r\n                          </CButton>\r\n                        </CModalFooter>\r\n                      </CModal>\r\n\r\n                      <CModal\r\n                        show={info}\r\n                        onClose={() => setInfo (!info)}\r\n                        color=\"info\"\r\n                      >\r\n                        <CModalHeader closeButton>\r\n                          <CModalTitle>Reviews</CModalTitle>\r\n                        </CModalHeader>\r\n                        <CModalBody>\r\n                          Order Name : Grocery Kit<br />\r\n                          Order Type : Online<br />\r\n                          Order Number : 7346<br />\r\n                          Review's :<br />\r\n                          Very Good Service by Loyal World, its very easy to\r\n                          process order, Got Delivery on Time Food qaulity and\r\n                          taste is very Good Thanks...,\r\n                          <hr />\r\n                          Order Name : Tablets<br />\r\n                          Order Type : Online<br />\r\n                          Order Number : 72146<br />\r\n                          Review's :<br />\r\n                          Very Good Service by Home World, its very easy to\r\n                          process order, Got Delivery on Time Food qaulity and\r\n                          taste is very Good Thanks ...,\r\n                        </CModalBody>\r\n                        <CModalFooter>\r\n                          <CButton color=\"info\" onClick={() => setInfo (!info)}>\r\n                            Done\r\n                          </CButton>{' '}\r\n                          <CButton\r\n                            color=\"secondary\"\r\n                            onClick={() => setInfo (!info)}\r\n                          >\r\n                            Cancel\r\n                          </CButton>\r\n                        </CModalFooter>\r\n                      </CModal>\r\n\r\n                      <CModal\r\n                        show={Non}\r\n                        onClose={() => setNon (!Non)}\r\n                        color=\"danger\"\r\n                      >\r\n                        <CModalHeader closeButton>\r\n                          <CModalTitle>Non Responded Orders</CModalTitle>\r\n                        </CModalHeader>\r\n                        <CModalBody>\r\n                          Order Name : Vegitables<br />\r\n                          Order Type : Online<br />\r\n                          Order Number : 7346<br />\r\n                          Reason for Cancellation :{' '}\r\n                          <span>Delivery was Late</span>\r\n                          <hr />\r\n                          Order Name : Pizza<br />\r\n                          Order Type : Online<br />\r\n                          Order Number : 72146<br />\r\n                          Reason for Cancellation :{' '}\r\n                          <span>Customer not available in premisses</span>\r\n                        </CModalBody>\r\n                        <CModalFooter>\r\n                          <CButton color=\"danger\" onClick={() => setNon (!Non)}>\r\n                            Done\r\n                          </CButton>{' '}\r\n                          <CButton\r\n                            color=\"secondary\"\r\n                            onClick={() => setNon (!Non)}\r\n                          >\r\n                            Cancel\r\n                          </CButton>\r\n                        </CModalFooter>\r\n                      </CModal>\r\n\r\n                      <CModal\r\n                        show={coupon}\r\n                        onClose={() => setCoupoun (!coupon)}\r\n                      >\r\n                        <CModalHeader closeButton>\r\n                          <CModalTitle>Coupouns Availed</CModalTitle>\r\n                        </CModalHeader>\r\n                        <CModalBody>\r\n                          <img\r\n                            src=\"/Coupouns.jpg\"\r\n                            class=\"img-fluid\"\r\n                            alt=\"Responsive-images\"\r\n                          />\r\n                        </CModalBody>\r\n                        <CModalFooter>\r\n                          <CButton\r\n                            color=\"danger\"\r\n                            onClick={() => setCoupoun (!coupon)}\r\n                          >\r\n                            Done\r\n                          </CButton>\r\n                          <CButton\r\n                            color=\"secondary\"\r\n                            onClick={() => setCoupoun (!coupon)}\r\n                          >\r\n                            Cancel\r\n                          </CButton>\r\n                        </CModalFooter>\r\n                      </CModal>\r\n\r\n                      <CModal\r\n                        show={block}\r\n                        onClose={() => setBlock (!block)}\r\n                        color=\"dark\"\r\n                      >\r\n                        <CModalHeader closeButton>\r\n                          <CModalTitle>Before Block</CModalTitle>\r\n                        </CModalHeader>\r\n                        <CModalBody>\r\n                          <CLabel>Suggestion to Unblock:</CLabel>\r\n                          <CSelect\r\n                            value={Suggestion}\r\n                            onChange={SuggestionChange}\r\n                          >\r\n                            <option value=\"Select Suggestion\">\r\n                              Select Suggestion\r\n                            </option>\r\n                            <option value=\"Photo not clear\">\r\n                              Photo not clear\r\n                            </option>\r\n                            <option value=\"Document not uploaded\">\r\n                              Document not uploaded\r\n                            </option>\r\n                            <option value=\"Other Reason\">Other Reason</option>\r\n                          </CSelect>\r\n                          <br />\r\n                          <TextField\r\n                            id=\"outlined-multiline-static\"\r\n                            label=\"Give Reason\"\r\n                            multiline\r\n                            value={Reason}\r\n                            rows={4}\r\n                            onChange={ReasonChange}\r\n                            variant=\"outlined\"\r\n                            style={{width: '100%'}}\r\n                          />\r\n                          <br />\r\n                        </CModalBody>\r\n                        <CModalFooter>\r\n                          <CButton\r\n                            class=\"btn btn-square btn-danger\"\r\n                            color=\"dark\"\r\n                            onClick={() =>\r\n                              // setBlock(!block)\r\n                              GetBlocked ()}\r\n                          >\r\n                            Block\r\n                          </CButton>\r\n                          <CButton\r\n                            color=\"secondary\"\r\n                            onClick={() => setBlock (!block)}\r\n                          >\r\n                            Close\r\n                          </CButton>\r\n                        </CModalFooter>\r\n                      </CModal>\r\n                    </CCardBody>\r\n                  </CCard>\r\n                </CCol>\r\n              </CRow>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Users_mobileApp;\r\n"],"sourceRoot":""}