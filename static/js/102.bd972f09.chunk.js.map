{"version":3,"sources":["services/service.js","views/masters/Banner_Image_Master.js"],"names":["TAABEDAR_SERVICE","table","placeholder","label","row","values","fields","key","validate","errors","title","description","image","onError","err","console","log","urlEndpoint","Banner_Image_Master","useState","bannerImage","setBannerImage","getBannerData","setGetBannerData","existImage","setExitImage","add","setAdd","setUpdate","disable","setDisable","onLoadFun","axios","get","then","response","data","catch","error","useEffect","formik","useFormik","initialValues","pkid","onSubmit","post","window","location","reload","alert","resetForm","AddBtn","type","size","id","disabled","UpdateBtn","onClick","UpdateLogic","undefined","xs","sm","md","lg","xl","className","handleSubmit","name","onChange","handleChange","value","touched","class","style","paddingLeft","publicKey","authenticationEndpoint","fileName","onSuccess","res","path","width","height","items","hover","striped","bordered","sorter","tableFilter","itemsPerPageSelect","pagination","scopedSlots","Title","item","Action","Description","Image","status"],"mappings":"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","file":"static/js/102.bd972f09.chunk.js","sourcesContent":["const TAABEDAR_SERVICE =\r\n  'http://192.168.1.3:8086/Tabedar_Dashboard/resourses/projectservice';\r\n\r\nexport default TAABEDAR_SERVICE;\r\n","\"use Strict\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CDataTable,\r\n  CRow,\r\n  CButton,\r\n  CFormGroup,\r\n  CInput,\r\n  CLabel,\r\n} from \"@coreui/react\";\r\nimport { useFormik } from \"formik\";\r\nimport \"../../style.css\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteSharpIcon from \"@material-ui/icons/DeleteSharp\";\r\nimport { IKContext, IKImage, IKUpload } from \"imagekitio-react\";\r\nimport axios from \"axios\";\r\nimport TAABEDAR_SERVICE from \"src/services/service\";\r\n\r\nconst table = { placeholder: \"Search here...\", label: \"Search:  \" };\r\nconst row = { label: \"Rows:\", values: [5, 10, 25, 50, 75, 100] };\r\n\r\nconst fields = [\r\n  { key: \"Action\" },\r\n  { key: \"Title\" },\r\n  { key: \"Description\" },\r\n  { key: \"Image\" },\r\n];\r\n\r\nconst validate = (values) => {\r\n  const errors = {};\r\n  if (!values.title) {\r\n    errors.title = \"Required *\";\r\n  }\r\n\r\n  if (!values.description) {\r\n    errors.description = \"Required *\";\r\n  }\r\n\r\n  if (!values.image) {\r\n    errors.image = \"Upload Image *\";\r\n  }\r\n  return errors;\r\n};\r\n\r\nconst onError = (err) => {\r\n  console.log(\"Error\", err);\r\n};\r\n\r\nconst publicKey = \"public_Q88FTm6/mKTXhbicC8rJNyROsbU=\";\r\nconst urlEndpoint = \"https://ik.imagekit.io/h3rqsqucfge/\";\r\nconst authenticationEndpoint = \"http://localhost:3001/auth\";\r\n\r\nconst Banner_Image_Master = () => {\r\n  const [bannerImage, setBannerImage] = useState();\r\n  const [getBannerData, setGetBannerData] = useState();\r\n  const [existImage, setExitImage] = useState();\r\n  const [add, setAdd] = useState(true);\r\n  const [update, setUpdate] = useState(false);\r\n  const [disable, setDisable] = useState(true);\r\n\r\n  const onSuccess = (res) => {\r\n    console.log(\"Success\", res.name);\r\n    setBannerImage(res.name);\r\n    res.name !== null && setDisable(false);\r\n  };\r\n\r\n  const onLoadFun = () => {\r\n    axios\r\n      .get(TAABEDAR_SERVICE + \"/GetBannerImage\")\r\n      .then((response) => {\r\n        setGetBannerData(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    onLoadFun();\r\n  }, []);\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      title: \"\",\r\n      description: \"\",\r\n      image: \"\",\r\n      pkid: \"\",\r\n    },\r\n    validate,\r\n    onSubmit: (values) => {\r\n      values.image = bannerImage;\r\n      axios\r\n        .post(TAABEDAR_SERVICE + \"/AddBannerImage\", values)\r\n        .then((response) => {\r\n          if (response.data === true || response.data === 1) {\r\n            onLoadFun();\r\n            window.location.reload();\r\n            console.log(response);\r\n            alert(\"Added Successfully\");\r\n          } else if (response.data === false) {\r\n            alert(\"Error not added\");\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n      formik.resetForm();\r\n    },\r\n  });\r\n\r\n  const deleteRow = (pkid) => {\r\n    console.log(`delete row Component`);\r\n    axios\r\n      .get(TAABEDAR_SERVICE + \"/DeleteBannerImage/ \" + pkid + \"\")\r\n      .then((response) => {\r\n        if (response.data === true) {\r\n          onLoadFun();\r\n          console.log(response);\r\n          alert(\"Deleted Successfully\");\r\n          window.location.reload();\r\n        } else {\r\n          alert(\"Error not Deleted\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const editRow = (pkid, title, description, image) => {\r\n    console.log(`edit row Component`);\r\n    formik.values.pkid = pkid;\r\n    formik.values.title = title;\r\n    formik.values.description = description;\r\n    setAdd(false);\r\n    setUpdate(true);\r\n    setExitImage(image);\r\n  };\r\n\r\n  const AddBtn = () => (\r\n    <CButton type=\"submit\" size=\"md\" id=\"Add-btn\" disabled={disable}>\r\n      Add\r\n    </CButton>\r\n  );\r\n\r\n  const UpdateBtn = () => {\r\n    return (\r\n      <CButton\r\n        type=\"update\"\r\n        size=\"md\"\r\n        id=\"Add-btn\"\r\n        onClick={() => {\r\n          if (!formik.values.title) {\r\n            return formik.errors.title;\r\n          } else if (!formik.values.description) {\r\n            return formik.errors.description;\r\n          } else {\r\n            UpdateLogic();\r\n          }\r\n        }}\r\n      >\r\n        Update\r\n      </CButton>\r\n    );\r\n  };\r\n\r\n  const UpdateLogic = () => {\r\n    setAdd(true);\r\n    if (bannerImage == \"\" || bannerImage == null || bannerImage == undefined) {\r\n      formik.values.image = existImage;\r\n    } else {\r\n      formik.values.image = bannerImage;\r\n    }\r\n    axios\r\n      .post(TAABEDAR_SERVICE + \"/UpdateBannerImage\", formik.values)\r\n      .then((response) => {\r\n        if (response.data === true || response.data === 1) {\r\n          onLoadFun();\r\n          console.log(response);\r\n          window.location.reload();\r\n          alert(\"Updated Successfully\");\r\n        } else {\r\n          alert(\"Update Failed\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1 id=\"ccmaster\">Banner Image Master</h1>\r\n      <br />\r\n      <CRow>\r\n        <CCol xs=\"12\" sm=\"12\" md=\"4\" lg=\"4\" xl=\"4\" className=\"mb-3 mb-xl-0\">\r\n          <div id=\"country-master\">\r\n            <CCard>\r\n              <CCardBody>\r\n                <CRow>\r\n                  <CCol>\r\n                    <CCard>\r\n                      <CCardHeader>Add Banners</CCardHeader>\r\n                      <CCardBody>\r\n                        <form onSubmit={formik.handleSubmit}>\r\n                          <CFormGroup row>\r\n                            <CCol xs=\"12\" md=\"12\">\r\n                              <CLabel>Title</CLabel>\r\n                              <CInput\r\n                                id=\"text-input1\"\r\n                                name=\"title\"\r\n                                placeholder=\"Title of Image\"\r\n                                type=\"text\"\r\n                                onChange={formik.handleChange}\r\n                                value={formik.values.title}\r\n                              />\r\n                              {formik.touched.title && formik.errors.title ? (\r\n                                <div class=\"errorMsg\">\r\n                                  {formik.errors.title}\r\n                                </div>\r\n                              ) : null}\r\n                            </CCol>\r\n                          </CFormGroup>\r\n\r\n                          <CFormGroup row>\r\n                            <CCol xs=\"12\" md=\"12\">\r\n                              <CLabel>Description</CLabel>\r\n                              <CInput\r\n                                id=\"text-input\"\r\n                                name=\"description\"\r\n                                placeholder=\"Description of Image\"\r\n                                value={formik.values.description}\r\n                                onChange={formik.handleChange}\r\n                              />\r\n                              {formik.touched.description &&\r\n                              formik.errors.description ? (\r\n                                <div class=\"errorMsg\">\r\n                                  {formik.errors.description}\r\n                                </div>\r\n                              ) : null}\r\n                            </CCol>\r\n                          </CFormGroup>\r\n                          <CFormGroup row>\r\n                            <CLabel style={{ paddingLeft: \"13px\" }}>\r\n                              Choose Image(1024 x 768 px)\r\n                            </CLabel>\r\n                            <CCol xs=\"12\" md=\"9\">\r\n                              <IKContext\r\n                                publicKey={publicKey}\r\n                                urlEndpoint={urlEndpoint}\r\n                                authenticationEndpoint={authenticationEndpoint}\r\n                              >\r\n                                <IKUpload\r\n                                  name=\"image\"\r\n                                  type=\"file\"\r\n                                  fileName={formik.values.image}\r\n                                  onError={onError}\r\n                                  onSuccess={onSuccess}\r\n                                  onChange={formik.handleChange}\r\n                                />\r\n                                {existImage && (\r\n                                  <div class=\"iconImage\">\r\n                                    <IKImage\r\n                                      urlEndpoint={urlEndpoint}\r\n                                      path={existImage}\r\n                                      width=\"50px\"\r\n                                      height=\"40px\"\r\n                                    />\r\n                                  </div>\r\n                                )}\r\n                              </IKContext>\r\n                              {formik.touched.image && formik.errors.image ? (\r\n                                <div class=\"errorMsg\">\r\n                                  {formik.errors.image}\r\n                                </div>\r\n                              ) : null}\r\n                            </CCol>\r\n                          </CFormGroup>\r\n                          {add == true ? <AddBtn /> : <UpdateBtn />}\r\n                        </form>\r\n                      </CCardBody>\r\n                    </CCard>\r\n                  </CCol>\r\n                </CRow>\r\n              </CCardBody>\r\n            </CCard>\r\n          </div>\r\n        </CCol>\r\n\r\n        <CCol xs=\"12\" sm=\"12\" md=\"8\" lg=\"8\" xl=\"8\">\r\n          <CCard>\r\n            <CCardBody>\r\n              <CRow>\r\n                <CCol>\r\n                  <CCard>\r\n                    <CCardHeader>Added Banner Images</CCardHeader>\r\n                    <CCardBody>\r\n                      <CDataTable\r\n                        items={getBannerData}\r\n                        fields={fields}\r\n                        hover\r\n                        striped\r\n                        bordered\r\n                        sorter\r\n                        tableFilter={table}\r\n                        itemsPerPageSelect={row}\r\n                        pagination\r\n                        size=\"sm\"\r\n                        scopedSlots={{\r\n                          Title: (item) => <td>{item.Title}</td>,\r\n                          Action: (item) => (\r\n                            <td>\r\n                              <CButton\r\n                                size=\"sm\"\r\n                                id=\"war-btn\"\r\n                                onClick={() =>\r\n                                  editRow(\r\n                                    item.pkid,\r\n                                    item.Title,\r\n                                    item.Description,\r\n                                    item.Image\r\n                                  )\r\n                                }\r\n                              >\r\n                                <EditIcon />\r\n                                {item.status}\r\n                              </CButton>\r\n                              <CButton\r\n                                size=\"sm\"\r\n                                id=\"war-btn1\"\r\n                                onClick={() => {\r\n                                  deleteRow(item.pkid);\r\n                                }}\r\n                              >\r\n                                <DeleteSharpIcon />\r\n                              </CButton>\r\n                            </td>\r\n                          ),\r\n                          Image: (item) => (\r\n                            <td>\r\n                              <IKImage\r\n                                urlEndpoint={urlEndpoint}\r\n                                path={item.Image}\r\n                                width=\"80px\"\r\n                                height=\"50px\"\r\n                              />\r\n                            </td>\r\n                          ),\r\n                        }}\r\n                      />\r\n                    </CCardBody>\r\n                  </CCard>\r\n                </CCol>\r\n              </CRow>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Banner_Image_Master;\r\n"],"sourceRoot":""}