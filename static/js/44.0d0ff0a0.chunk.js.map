{"version":3,"sources":["services/service.js","../node_modules/@material-ui/icons/DescriptionSharp.js","../node_modules/@material-ui/icons/MenuBookSharp.js","views/vendors/ViewVendors.js"],"names":["TAABEDAR_SERVICE","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","React","_default","createElement","d","Fragment","table","placeholder","label","Rows","fields","key","getBadge","Status","ViewStoreMaster","useState","VendorsData","setVendorsData","MerchantCategory","setMerchantCategory","block","setBlock","Vendorpkid","SetVendorpkid","Suggestion","SetSuggestion","Reason","SetReason","GetVendors","useCallback","axios","method","url","headers","then","response","data","catch","error","console","log","GetVendorCategory","params","language_code","MerchantTypeOption","map","item","pkid","Categories","useEffect","GetBlocked","alert","BloackVendor","history","useHistory","redirect","push","redirect2","md","id","to","size","htmlFor","custom","name","onChange","event","target","items","striped","itemsPerPage","pagination","sorter","tableFilter","itemsPerPageSelect","scopedSlots","Block","onClick","color","TotalOrders","totalOrders","Name","Menu","Document","show","onClose","closeButton","multiline","rows","variant","style","width","class"],"mappings":"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","file":"static/js/44.0d0ff0a0.chunk.js","sourcesContent":["const TAABEDAR_SERVICE =\r\n  'http://192.168.1.3:8086/Tabedar_Dashboard/resourses/projectservice';\r\n\r\nexport default TAABEDAR_SERVICE;\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M14 2H4v20h16V8l-6-6zm2 16H8v-2h8v2zm0-4H8v-2h8v2zm-3-5V3.5L18.5 9H13z\"\n}), 'DescriptionSharp');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M21 5c-1.11-.35-2.33-.5-3.5-.5-1.95 0-4.05.4-5.5 1.5-1.45-1.1-3.55-1.5-5.5-1.5S2.45 4.9 1 6v15.5C2.45 20.4 4.55 20 6.5 20s4.05.4 5.5 1.5c1.45-1.1 3.55-1.5 5.5-1.5 1.17 0 2.39.15 3.5.5.75.25 1.4.55 2 1V6c-.6-.45-1.25-.75-2-1zm0 13.5c-1.1-.35-2.3-.5-3.5-.5-1.7 0-4.15.65-5.5 1.5V8c1.35-.85 3.8-1.5 5.5-1.5 1.2 0 2.4.15 3.5.5v11.5z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M17.5 10.5c.88 0 1.73.09 2.5.26V9.24c-.79-.15-1.64-.24-2.5-.24-1.7 0-3.24.29-4.5.83v1.66c1.13-.64 2.7-.99 4.5-.99zM13 12.49v1.66c1.13-.64 2.7-.99 4.5-.99.88 0 1.73.09 2.5.26V11.9c-.79-.15-1.64-.24-2.5-.24-1.7 0-3.24.3-4.5.83zM17.5 14.33c-1.7 0-3.24.29-4.5.83v1.66c1.13-.64 2.7-.99 4.5-.99.88 0 1.73.09 2.5.26v-1.52c-.79-.16-1.64-.24-2.5-.24z\"\n})), 'MenuBookSharp');\n\nexports.default = _default;","import React, {useState} from 'react';\r\nimport MenuBookSharpIcon from '@material-ui/icons/MenuBookSharp';\r\nimport {Link} from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport {\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CDataTable,\r\n  CRow,\r\n  CButton,\r\n  CBadge,\r\n  CForm,\r\n  CFormGroup,\r\n  CLabel,\r\n  CInput,\r\n  CSelect,\r\n  CLink,\r\n  CModal,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalHeader,\r\n  CModalTitle,\r\n} from '@coreui/react';\r\nimport '../../../src/style.css';\r\nimport TAABEDAR_SERVICE from 'src/services/service';\r\nimport DescriptionSharpIcon from '@material-ui/icons/DescriptionSharp';\r\nimport NoEncryptionSharpIcon from '@material-ui/icons/NoEncryptionSharp';\r\nimport {useHistory} from 'react-router-dom';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst table = {placeholder: 'Search here...', label: 'Search'};\r\nconst Rows = {label: 'Rows'};\r\nconst fields = [\r\n  {key: 'Block'},\r\n  {key: 'Name'},\r\n  {key: 'Branch'},\r\n  {key: 'Type'},\r\n  {key: 'Category'},\r\n  {key: 'Address'},\r\n  {key: 'City'},\r\n  {key: 'Area'},\r\n  {key: 'Mobile'},\r\n  {key: 'Discount'},\r\n  {key: 'Email'},\r\n  {key: 'TotalOrders'},\r\n  {key: 'Status'},\r\n  {key: 'Menu'},\r\n  {key: 'Document'},\r\n  {key: 'Average_Ratings'},\r\n];\r\n\r\nconst getBadge = Status => {\r\n  switch (Status) {\r\n    case 'Open':\r\n      return 'success';\r\n    case 'Closed':\r\n      return 'warning';\r\n    default:\r\n      return 'info';\r\n  }\r\n};\r\n\r\nconst ViewStoreMaster = () => {\r\n  const [VendorsData, setVendorsData] = useState ();\r\n  const [MerchantCategory, setMerchantCategory] = useState ();\r\n  const [block, setBlock] = useState (false);\r\n  const [Vendorpkid, SetVendorpkid] = useState ('');\r\n  const [Suggestion, SetSuggestion] = useState ('');\r\n  const [Reason, SetReason] = useState ('');\r\n\r\n  const ChangeFilter = event => {\r\n    const fldate = '';\r\n    if (event.target.value == '0') {\r\n      GetVendors ();\r\n    } else {\r\n      axios ({\r\n        method: 'GET',\r\n        url: TAABEDAR_SERVICE + '/GetVendorFilter/' + event.target.value + '',\r\n        headers: {\r\n          'content-type': 'application/json',\r\n        },\r\n      })\r\n        .then (response => {\r\n          setVendorsData (response.data);\r\n        })\r\n        .catch (error => {\r\n          console.log (error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const GetVendors = React.useCallback (() => {\r\n    axios ({\r\n      method: 'GET',\r\n      url: TAABEDAR_SERVICE + '/GetVendor',\r\n      headers: {\r\n        'content-type': 'application/json',\r\n      },\r\n    })\r\n      .then (response => {\r\n        setVendorsData (response.data);\r\n      })\r\n      .catch (error => {\r\n        console.log (error);\r\n      });\r\n    GetVendorCategory ();\r\n  }, []);\r\n\r\n  const GetVendorCategory = () => {\r\n    axios ({\r\n      method: 'GET',\r\n      url: TAABEDAR_SERVICE + '/GetMerchantType',\r\n      headers: {\r\n        'content-type': 'application/json',\r\n      },\r\n      params: {\r\n        language_code: 'en',\r\n      },\r\n    })\r\n      .then (response => {\r\n        const MerchantTypeOption = response.data.map (item => (\r\n          <option value={item.pkid}>{item.Categories}</option>\r\n        ));\r\n        setMerchantCategory (MerchantTypeOption);\r\n      })\r\n      .catch (error => {\r\n        console.log (error);\r\n      });\r\n  };\r\n\r\n  const BloackVendor = (pkid, Suggestion, Reason) => {\r\n    axios ({\r\n      method: 'GET',\r\n      url: TAABEDAR_SERVICE +\r\n        '/BlockVendor/' +\r\n        pkid +\r\n        '/' +\r\n        Suggestion +\r\n        '/' +\r\n        Reason +\r\n        '',\r\n      headers: {\r\n        'content-type': 'application/json',\r\n      },\r\n    })\r\n      .then (response => {\r\n        if (response.data == true) {\r\n          alert ('Vendor Sucessfully blocked');\r\n          GetVendors ();\r\n        } else {\r\n          alert ('Failed To blocked Vendor');\r\n        }\r\n      })\r\n      .catch (error => {\r\n        console.log (error);\r\n      });\r\n  };\r\n\r\n  React.useEffect (() => {\r\n    GetVendors ();\r\n  }, []);\r\n\r\n  const getVendorpkid = pkid => {\r\n    SetVendorpkid (pkid);\r\n\r\n    SetSuggestion ('Select Suggestion');\r\n    SetReason ('');\r\n    setBlock (!block);\r\n  };\r\n\r\n  const SuggestionChange = event => {\r\n    SetSuggestion (event.target.value);\r\n  };\r\n  const ReasonChange = event => {\r\n    SetReason (event.target.value);\r\n  };\r\n\r\n  const GetBlocked = () => {\r\n    SetSuggestion ('Select Suggestion');\r\n    SetReason ('');\r\n    setBlock (!block);\r\n    BloackVendor (Vendorpkid, Suggestion, Reason);\r\n  };\r\n\r\n  let history = useHistory ();\r\n  const redirect = () => {\r\n    history.push ('/RegPatMenuInfo');\r\n  };\r\n  const redirect1 = () => {\r\n    history.push ('/RegPatSalesInfo');\r\n  };\r\n  const redirect2 = () => {\r\n    history.push ('/RegPatOwnerInfo');\r\n  };\r\n  const redirect3 = () => {\r\n    history.push ('/EditVendor');\r\n  };\r\n  return (\r\n    <div>\r\n      <CRow>\r\n        <CCol md=\"3\" />\r\n        <CCol md=\"6\">\r\n          <h1 id=\"ccmaster\">All Vendors</h1>\r\n        </CCol>\r\n        <CCol md=\"3\" />\r\n      </CRow>\r\n      <CRow>\r\n        <CCol md=\"12\">\r\n          <div>\r\n            <CLink to=\"/AddNewStore\">\r\n              <CButton size=\"sm\" id=\"AddEmp\">\r\n                Add Vendors\r\n              </CButton>\r\n            </CLink>\r\n\r\n            <br />\r\n          </div>\r\n        </CCol>\r\n      </CRow>\r\n\r\n      <CRow>\r\n        <CCol md=\"12\">\r\n          <CCard>\r\n            <CCardBody>\r\n              <CRow>\r\n                <CCol>\r\n                  <CCard>\r\n                    <CCardHeader>\r\n                      <CRow>\r\n                        <CCol md=\"3\">\r\n                          <CLabel htmlFor=\"nf-email\">Select Vendors</CLabel>\r\n                          <CSelect\r\n                            custom\r\n                            name=\"merchant\"\r\n                            onChange={ChangeFilter}\r\n                            id=\"merchant\"\r\n                          >\r\n                            <option value=\"0\">All</option>\r\n                            {MerchantCategory}\r\n                          </CSelect>\r\n                        </CCol>\r\n                      </CRow>\r\n                    </CCardHeader>\r\n                    <CCardBody>\r\n                      <CDataTable\r\n                        items={VendorsData}\r\n                        fields={fields}\r\n                        striped\r\n                        itemsPerPage={5}\r\n                        pagination\r\n                        sorter\r\n                        tableFilter={table}\r\n                        itemsPerPageSelect={Rows}\r\n                        scopedSlots={{\r\n                          Block: item => (\r\n                            <td>\r\n                              <CRow>\r\n                                <CCol md=\"10\">\r\n                                  <CButton\r\n                                    size=\"sm\"\r\n                                    onClick={() => {\r\n                                      getVendorpkid (item.pkid);\r\n                                    }}\r\n                                    id=\"activate\"\r\n                                  >\r\n                                    <NoEncryptionSharpIcon />\r\n                                  </CButton>\r\n                                </CCol>\r\n                              </CRow>\r\n                            </td>\r\n                          ),\r\n                          Status: item => (\r\n                            <td>\r\n                              <CBadge color={getBadge (item.Status)}>\r\n                                {item.Status}\r\n                              </CBadge>\r\n                            </td>\r\n                          ),\r\n                          TotalOrders: item => (\r\n                            <td>\r\n                              <CButton\r\n                                id=\"order-list\"\r\n                                onClick={() => {\r\n                                  history.push ('/VendorTotalOrder', {\r\n                                    data: item,\r\n                                  });\r\n                                }}\r\n                              >\r\n                                {item.totalOrders}\r\n                              </CButton>\r\n                            </td>\r\n                          ),\r\n                          Name: item => (\r\n                            <td>\r\n                              <CButton\r\n                                id=\"order-list\"\r\n                                onClick={() =>\r\n                                  history.push ('/EditVendor', {data: item})}\r\n                              >\r\n                                {item.Name}\r\n                              </CButton>\r\n                            </td>\r\n                          ),\r\n                          Menu: item => (\r\n                            <td>\r\n                              <CButton\r\n                                onClick={redirect}\r\n                                size=\"sm\"\r\n                                id=\"war-btn\"\r\n                              >\r\n                                <MenuBookSharpIcon />\r\n                              </CButton>\r\n                            </td>\r\n                          ),\r\n                          Document: item => (\r\n                            <td>\r\n                              <CButton\r\n                                size=\"sm\"\r\n                                id=\"war-btn\"\r\n                                onClick={redirect2}\r\n                              >\r\n                                <DescriptionSharpIcon />\r\n                              </CButton>\r\n                            </td>\r\n                          ),\r\n                        }}\r\n                      />\r\n\r\n                      <CModal\r\n                        show={block}\r\n                        onClose={() => setBlock (!block)}\r\n                        color=\"dark\"\r\n                      >\r\n                        <CModalHeader closeButton>\r\n                          <CModalTitle>Before Block</CModalTitle>\r\n                        </CModalHeader>\r\n                        <CModalBody>\r\n                          <CLabel>Suggestion to Unblock:</CLabel>\r\n                          <CSelect\r\n                            value={Suggestion}\r\n                            onChange={SuggestionChange}\r\n                          >\r\n                            <option value=\"Select Suggestion\">\r\n                              Select Suggestion\r\n                            </option>\r\n                            <option value=\"Photo not clear\">\r\n                              Photo not clear\r\n                            </option>\r\n                            <option value=\"Document not uploaded\">\r\n                              Document not uploaded\r\n                            </option>\r\n                            <option value=\"Other Reason\">Other Reason</option>\r\n                          </CSelect>\r\n                          <br />\r\n                          <TextField\r\n                            id=\"outlined-multiline-static\"\r\n                            label=\"Give Reason\"\r\n                            multiline\r\n                            value={Reason}\r\n                            rows={4}\r\n                            onChange={ReasonChange}\r\n                            variant=\"outlined\"\r\n                            style={{width: '100%'}}\r\n                          />\r\n                          <br />\r\n                        </CModalBody>\r\n                        <CModalFooter>\r\n                          <CButton\r\n                            class=\"btn btn-square btn-danger\"\r\n                            color=\"dark\"\r\n                            onClick={() =>\r\n                              // setBlock(!block)\r\n                              GetBlocked ()}\r\n                          >\r\n                            Block\r\n                          </CButton>\r\n                          <CButton\r\n                            color=\"secondary\"\r\n                            onClick={() => setBlock (!block)}\r\n                          >\r\n                            Close\r\n                          </CButton>\r\n                        </CModalFooter>\r\n                      </CModal>\r\n                    </CCardBody>\r\n                  </CCard>\r\n                </CCol>\r\n              </CRow>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ViewStoreMaster;\r\n"],"sourceRoot":""}